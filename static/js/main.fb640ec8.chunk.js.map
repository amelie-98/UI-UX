{"version":3,"sources":["serviceWorker.js","actions/index.js","const/actionTypes.js","reduces/dataRoom.js","reduces/currentRoom.js","reduces/showInfoRoom.js","reduces/changeTheme.js","reduces/dataVietNamLanguage.js","reduces/changeVietNamLanguage.js","reduces/arrGif.js","reduces/Emoji.js","reduces/valueMessage.js","reduces/listRoom.js","reduces/currentUser.js","reduces/index.js","components/Api/apiCaller.js","components/Login/Login.js","components/Modal/AddMember.js","components/ListRoom.js","components/Switch/DayNight.js","components/Modal/SwitchLanguage.js","components/Popovers/Icon.js","components/Popovers/PieChart.js","components/ContentRoom.js","components/Collapse/IntroRoom.js","components/InfoRoom.js","App.js","Boss.js","index.js"],"names":["Boolean","window","location","hostname","match","check","initialState","id","nameRoom","type","numberNotificationUnRead","Intro","data","avatar","name","time","message","level","myReducer","state","action","actionTypes","_","findIndex","push","gif","attributes","dataRoom","map","n","parseInt","unread","description","console","log","InfoRoom","Admin","Member","AddMemberToThisRoom","CurrentNumberOfPeopleInTheRoom","OnlinePeople","combineReducers","currentRoom","showInfoRoom","changeTheme","dataVietNamLanguage","changeVietNamLanguage","arrGif","Emoji","valueMessage","listRoom","currentUser","login","obj","user","email","userName","password","passWord","remember_me","checkRememberMe","dispatch","url","method","body","axios","then","res","setCurrentUser","catch","error","setDataRoom","connect","actions","props","history","useHistory","userNameLogin","useRef","passWordLogin","className","defaultChecked","htmlFor","ref","data-type","value","onClick","current","checked","setTimeout","undefined","alert","href","useState","modal","setModal","toggle","lightTheme","classNames","IconAddMemberLightTheme","Modal","isOpen","ModalHeader","ModalBody","SearchCircleLightTheme","setCurrentRoom","currentRoomMouseDown","setCurrentRoomMouseDown","currentRoomOnClick","setCurrentRoomOnClick","inputValue","setInputValue","ListRoomArr","filter","includes","toLowerCase","ListRoomLightTheme","HeaderListRoomLightTheme","goBack","onChange","e","target","item","index","RoomSelected","RemoveHover","key","onMouseDown","IconAndNameRoomLightTheme","MoveToCenter","NotificationRead","HideNotificationRead","setChangeTheme","for","setChangeVietNamLanguage","UncontrolledPopover","trigger","placement","hideArrow","PopoverBody","PopoverBodyLightTheme","Row","Array","from","Col","sm","addEmoji","chooseEmoji","colorScale","PopoverHeader","HeaderChartBodyLightTheme","PieChartBodyLightTheme","innerRadius","labels","x","y","uniqBy","find","length","style","background","StateNumberBodyLightTheme","setShowInfoRoom","setSendMessage","setValueMessage","setSendGif","tooltipOpen","setTooltipOpen","wrapperRef","mainRoomRef","clickOnInput","setClickOnInput","showGif","setShowGif","clickOutSide","event","contains","document","removeEventListener","useEffect","addEventListener","sendMessage","keyCode","shiftKey","trim","scrollTop","scrollHeight","ContentRoomLightTheme","MaxWidth","MdPeopleLightTheme","LightThisIcon","MdPeopleLightThemeLightThisIcon","MainRoomLightTheme","CustomContainerLightTheme","src","alt","Tooltip","NameTimeMessageLightTheme","dangerouslySetInnerHTML","__html","toBr","marked","FooterContentRoomLightTheme","ClickMessage","MessageLightTheme","ClickMessageMessageLightTheme","ClickIcon","FooterIconLightTheme","ClickIconFooterIconLightTheme","testLightTheme","ShowGif","breakpointCols","columnClassName","nextTick","letShowGif","setIsOpen","Collapse","Card","CardBody","BodyIntroRoomLightTheme","ahihiRef","testRef","indexDiv","setIndexDiv","divStyle","setdivStyle","showInfoDiv","innerHeight","offsetTop","position","top","HideThisDiv","InfoRoomLightTheme","BodyInfoRoomLightTheme","addZindexCss","levelAdminLightTheme","levelMemberLightTheme","getApi","config","headers","authToken","get","Boss","exact","path","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb640ec8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actionTypes from '../const/actionTypes';\r\nimport * as apiCaller from '../components/Api/apiCaller'\r\nimport axios from 'axios'\r\n\r\nexport let check;\r\n\r\nexport const getApi = (data) => {\r\n  var config = {\r\n    headers: { 'Authorization': \"Bearer \" + data.attributes.authToken }\r\n  };\r\n  return (dispatch) => {\r\n    axios.get(\r\n      'http://71acadfd.ngrok.io/api/joined_rooms',\r\n      config\r\n    ).then((res) => {\r\n      dispatch(setDataRoom(res.data.data))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    });\r\n  }\r\n}\r\n\r\nexport const login = (data) => {\r\n  const obj = {\r\n    user: {\r\n      email: data.userName,\r\n      password: data.passWord,\r\n      remember_me: data.checkRememberMe\r\n    }\r\n  }\r\n  return (dispatch) => {\r\n    apiCaller.request_infused_by_data('http://71acadfd.ngrok.io/api/login', 'post', obj)\r\n      .then(res => {\r\n        check = res;\r\n        dispatch(setCurrentUser(res.data.data))\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n  }\r\n}\r\n\r\nexport const setDataRoom = (data) => { return { type: actionTypes.setDataRoom, data: data } }\r\n\r\nexport const setCurrentUser = (data) => { return { type: actionTypes.setCurrentUser, data: data } }\r\n\r\nexport const getListRoom = (data) => { return { type: actionTypes.getListRoom, data: data } }\r\n\r\nexport const setCurrentRoom = (data) => { return { type: actionTypes.setCurrentRoom, data: data } }\r\n\r\nexport const setShowInfoRoom = () => { return { type: actionTypes.setShowInfoRoom } }\r\n\r\nexport const setChangeTheme = () => { return { type: actionTypes.setChangeTheme } }\r\n\r\nexport const setChangeVietNamLanguage = () => { return { type: actionTypes.setChangeVietNamLanguage } }\r\n\r\nexport const setSendMessage = (data) => { return { type: actionTypes.setSendMessage, data: data } }\r\n\r\nexport const setValueMessage = (data) => { return { type: actionTypes.setValueMessage, data: data } }\r\n\r\nexport const setSendGif = (data) => { return { type: actionTypes.setSendGif, data: data } }","export default {\r\n  setCurrentRoom: 'SET_CURRENT_ROOM',\r\n  setShowInfoRoom: 'SET_SHOW_INFO_ROOM',\r\n  setChangeTheme: 'SET_CHANGE_THEME',\r\n  setChangeVietNamLanguage: 'SET_CHANGE_VIETNAM_LANGUAGE',\r\n  setSendMessage: 'SET_SEND_MESSAGE',\r\n  setValueMessage: 'SET_VALUE_MESSAGE',\r\n  setSendGif: 'SET_SEND_GIF',\r\n  getListRoom: 'GET_LIST_ROOM',\r\n  setCurrentUser: 'SET_CURRENT_USER',\r\n  setDataRoom: 'SET_DATA_ROOM'\r\n};","import actionTypes from '../const/actionTypes';\r\nimport _ from 'lodash'\r\n\r\nvar initialState = [\r\n  {\r\n    id:1,nameRoom: 'Work', type: 'Work', numberNotificationUnRead: '2', Intro: ' Work-to-rule is a job action in which employees do no more than the minimum required by the rules of their contract, and precisely follow all safety or other regulations, which may cause a slowdown or decrease in productivity, as they are no longer working during breaks or during unpaid extended hours and weekends '\r\n    , data: [\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Admin' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n    ],\r\n  },\r\n  {\r\n    id:2,nameRoom: 'Shopping', type: 'Shopping', numberNotificationUnRead: '4', Intro: \" 1) Create a 'to buy' list and don't veer off into the makeup department no matter how much that new Dior lipstick is calling your name \\n 2) Wear proper undergarments and shoes for a good view of your outfit \\n 3) Shop mornings - it's less crowded, the merchandise is tidy, and the sales associates are fresh \"\r\n    , data: [\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Admin' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n    ],\r\n  },\r\n  {\r\n    id:3,nameRoom: 'Party', type: 'Party', numberNotificationUnRead: '6', Intro: ' You’ve got your outfit sorted, the group chat is going off and you’re ready to party. Taking the time to do a bit of planning before you head out the door can make all the difference in how the night goes. Partying safely means that you’re less likely to get into trouble, and more likely to just have a good time ', data: [\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Admin' },\r\n    ],\r\n  }\r\n]\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.setSendMessage:\r\n      state[_.findIndex(state, { id: action.data.nameRoom })].data.push({ avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: action.data.message, level: 'Member' });\r\n      return state;\r\n\r\n    case actionTypes.setSendGif:\r\n      state[_.findIndex(state, { id: action.data.nameRoom })].data.push({ avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', gif: action.data.gif, level: 'Member' });\r\n      return state;\r\n\r\n    case actionTypes.setDataRoom:\r\n      action.data[0].attributes.name = 'Work'\r\n      const dataRoom = _.map(action.data, (n) => (\r\n        {\r\n          id: parseInt(n.id),\r\n          nameRoom: n.attributes.name,\r\n          type: 'Work',\r\n          numberNotificationUnRead: n.attributes.unread,\r\n          Intro: n.attributes.description,\r\n          data: [\r\n            { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n            { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n            { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Member' },\r\n            { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Member' },\r\n            { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n            { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Admin' },\r\n            { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n            { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n            { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n          ],\r\n        }\r\n      ))\r\n      console.log(dataRoom)\r\n      return dataRoom;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = 1;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setCurrentRoom:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setShowInfoRoom:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeTheme:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = {\r\n  InfoRoom: 'Thông Tin Phòng',\r\n  Admin: 'Người Quản Trị',\r\n  Member: 'Thành Viên',\r\n  AddMemberToThisRoom: 'Thêm Nhân Viên Vào Phòng Này',\r\n  CurrentNumberOfPeopleInTheRoom: 'Số Người Hiện Tại Trong Phòng',\r\n  OnlinePeople: 'Số Người Trực Tuyến'\r\n};\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeVietNamLanguage:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = [\r\n  'https://media.giphy.com/media/GAgLkuPIhozg4/giphy.gif',\r\n  'https://media.giphy.com/media/JRlqKEzTDKci5JPcaL/giphy.gif',\r\n  'https://media.giphy.com/media/3o7btXJQm5DD8ApubC/giphy.gif',\r\n  'https://media.giphy.com/media/3s0ddui7kadGg/giphy.gif',\r\n  'https://media.giphy.com/media/maINkm7zjcL4s/giphy.gif',\r\n  'https://media.giphy.com/media/TRdV7Bk5JVdVm/giphy.gif',\r\n  'https://media.giphy.com/media/8OTxSsEKzMs2A/giphy.gif',\r\n  'https://media.giphy.com/media/ptHRd4Rpeb11m/giphy.gif',\r\n  'https://media.giphy.com/media/jw99U8P9W4yOY/giphy.gif',\r\n  'https://media.giphy.com/media/kiOGNdQMj04SI/giphy.gif',\r\n  'https://media.giphy.com/media/U6IQE5XjiF5hm/giphy.gif',\r\n  'https://media.giphy.com/media/2y98KScHKeaQM/giphy.gif',\r\n  'https://media.giphy.com/media/H5AMoAO4JLPEI/giphy.gif',\r\n  'https://media.giphy.com/media/YHx48QSvcEFlC/giphy.gif',\r\n  'https://media.giphy.com/media/MlTMwvO9ZiWwU/giphy.gif',\r\n  'https://media.giphy.com/media/ZpRlGlevx07Mk/giphy.gif',\r\n  'https://media.giphy.com/media/12pwt3qlbVVBfy/giphy.gif',\r\n  'https://media.giphy.com/media/8Lc5xmvzRhlLy/giphy.gif',\r\n  'https://media.giphy.com/media/pIcez8CpT4ali/giphy.gif',\r\n  'https://media.giphy.com/media/DoHRW685Y1gru/giphy.gif',\r\n  'https://media.giphy.com/media/10Q2IMOHo3taQU/giphy.gif',\r\n  'https://media.giphy.com/media/4NuAILyDbmD16/giphy.gif',\r\n  'https://media.giphy.com/media/t5Ml3rCGNEddm/giphy.gif',\r\n  'https://media.giphy.com/media/RneIcLEosVuta/giphy.gif',\r\n  'https://media.giphy.com/media/F6132ctb9YARa/giphy.gif',\r\n  'https://media.giphy.com/media/Yv6RcuiyHYmn6/giphy.gif',\r\n  'https://media.giphy.com/media/lmFm5QZMzdmQ8/giphy.gif',\r\n  'https://media.giphy.com/media/13Q1xpydjvb8qs/giphy.gif',\r\n];\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = '😀😃😄😁😆😂🤣😊😇🙂🙃😉😌😍🥰😘😗😙😚😋😛😝😜🤪🤨🧐🤓😎🤩🥳😏😒😞😫😩🥺😢😭😤😠😡🤬🤯🐶🐱🐭🐹🐰🦊🐻🐼🐨🐯🦁🐮🐮🐷🐽🐸🐵🙈🙉🙊🐒🐔🐧🐦🐤🐣🐥🐙🦕🦎🐍🐢🐌🐝🌑🌘🌘🌗🌗⚽🏀🏈⚾🥎🎾🏐🏉🥏🎱🏓🏸🏒🏑🥍🏏🥅⛳';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = '';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setValueMessage:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n// import _ from 'lodash'\r\n\r\nvar initialState = []\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.getListRoom:\r\n      return action.data.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = {};\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setCurrentUser:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\n\r\nimport dataRoom from './dataRoom'\r\nimport currentRoom from './currentRoom'\r\nimport showInfoRoom from './showInfoRoom'\r\nimport changeTheme from './changeTheme'\r\nimport dataVietNamLanguage from './dataVietNamLanguage'\r\nimport changeVietNamLanguage from './changeVietNamLanguage'\r\nimport arrGif from './arrGif'\r\nimport Emoji from './Emoji'\r\nimport valueMessage from './valueMessage'\r\nimport listRoom from './listRoom'\r\nimport currentUser from './currentUser'\r\n\r\nconst myReducer = combineReducers({\r\n  dataRoom: dataRoom,\r\n  currentRoom: currentRoom,\r\n  showInfoRoom: showInfoRoom,\r\n  changeTheme: changeTheme,\r\n  dataVietNamLanguage: dataVietNamLanguage,\r\n  changeVietNamLanguage: changeVietNamLanguage,\r\n  arrGif: arrGif,\r\n  Emoji: Emoji,\r\n  valueMessage: valueMessage,\r\n  listRoom: listRoom,\r\n  currentUser: currentUser\r\n});\r\n\r\nexport default myReducer;","import axios from 'axios'\r\n\r\nexport function request_infused_by_data(url, method, body) {\r\n  return axios({\r\n    method: method,\r\n    url: url,\r\n    data: body\r\n  })\r\n};\r\n\r\nexport function request_infused_by_params(url, method = 'GET', body) {\r\n  return axios({\r\n    method: method,\r\n    url: url,\r\n    params: body\r\n  })\r\n};","import React, { useRef } from 'react'\r\nimport './Login.css'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nfunction Login(props) {\r\n  let history = useHistory();\r\n  function handleClick() {\r\n    props.login(userNameLogin.current.value, passWordLogin.current.value, checkRememberMe.current.checked)\r\n    setTimeout(function () {\r\n      if (actions.check !== undefined) {\r\n        history.push('/App')\r\n      }\r\n      else {\r\n        alert('sai mk roi thang ngu')\r\n      }\r\n    }\r\n      , 3000);\r\n  }\r\n  const userNameLogin = useRef();\r\n  const passWordLogin = useRef();\r\n  const checkRememberMe = useRef();\r\n  return (\r\n    <div className='Login' >\r\n      <div className=\"login-wrap\">\r\n        <div className=\"login-html\">\r\n          <input id=\"tab-1\" type=\"radio\" name=\"tab\" className=\"sign-in height\" defaultChecked /><label htmlFor=\"tab-1\" className=\"tab\">Sign In</label>\r\n          <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"sign-up height\" /><label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\r\n          <div className=\"login-form\">\r\n            <div className=\"sign-in-htm\">\r\n              <div className=\"group\">\r\n                <label htmlFor=\"user\" className=\"label\" >Username</label>\r\n                <input id=\"user\" type=\"text\" className=\"input height\" ref={userNameLogin} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\" >Password</label>\r\n                <input id=\"pass\" type=\"password\" className=\"input height\" data-type=\"password\" ref={passWordLogin} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input id=\"check\" type=\"checkbox\" className=\"check height\" defaultChecked ref={checkRememberMe} />\r\n                <label htmlFor=\"check\"><span className=\"icon\" /> Keep me Signed in</label>\r\n              </div>\r\n              <div className=\"group\">\r\n                <input type=\"submit\" className=\"button height\" value=\"SIGN IN\" onClick={handleClick} />\r\n              </div>\r\n              <div className=\"hr\" />\r\n              <div className=\"foot-lnk\">\r\n                <a href=\"#forgot\">Forgot Password?</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"sign-up-htm\">\r\n              <div className=\"group\">\r\n                <label htmlFor=\"user\" className=\"label\">Username</label>\r\n                <input id=\"user\" type=\"text\" className=\"input height\" />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                <input id=\"pass\" type=\"password\" className=\"input height\" data-type=\"password\" />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\">Repeat Password</label>\r\n                <input id=\"pass\" type=\"password\" className=\"input height\" data-type=\"password\" />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\">Email Address</label>\r\n                <input id=\"pass\" type=\"text\" className=\"input height\" />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input type=\"submit\" className=\"button height\" value=\"SIGN UP\" />\r\n              </div>\r\n              <div className=\"hr\" />\r\n              <div className=\"foot-lnk\">\r\n                <label htmlFor=\"tab-1\">Already Member?\r\n              </label></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (userName, passWord, checkRememberMe) => { dispatch(actions.login({ userName: userName, passWord: passWord, checkRememberMe: checkRememberMe })) },\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Login);","import React, { useState } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { MdPersonAdd } from 'react-icons/md';\r\nimport './AddMember.css'\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddMember = (props) => {\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div className='Model-AddMember'>\r\n      <MdPersonAdd onClick={toggle}\r\n        className={classNames('Icon-AddMember', {\r\n          IconAddMemberLightTheme: lightTheme === true,\r\n        })}\r\n      />\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          {\r\n            props.changeVietNamLanguage ?\r\n              <p>Add Member To This Room</p>\r\n              :\r\n              <p>{props.dataVietNamLanguage.AddMemberToThisRoom}</p>\r\n          }\r\n        </ModalHeader>\r\n        <ModalBody className='ModalBody'>\r\n          {/* css kính lúp để ở file ListRoom.css */}\r\n          <div className=\"wrapper\">\r\n            <div className=\"search-icon\">\r\n              <input\r\n                className={classNames('search-circle', {\r\n                  SearchCircleLightTheme: lightTheme === true,\r\n                })}\r\n                type=\"text\" />\r\n              <div className=\"search-bar\" />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(AddMember);","import React, { useState } from 'react';\r\nimport './ListRoom.css';\r\nimport _ from 'lodash'\r\nimport { MdWork } from 'react-icons/md';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport { GiLargeDress, GiMusicalNotes } from 'react-icons/gi'\r\nimport classNames from 'classnames'\r\nimport AddMember from './Modal/AddMember'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ListRoom(props) {\r\n  let history = useHistory();\r\n  const [currentRoomMouseDown, setCurrentRoomMouseDown] = useState(1);\r\n  const [currentRoomOnClick, setCurrentRoomOnClick] = useState(1);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const onClickRoom = (id) => {\r\n    setCurrentRoomOnClick(id)\r\n    props.setCurrentRoom(id)\r\n  }\r\n  const searchRoom = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n  const ListRoomArr = _.filter(_.map(props.dataRoom, n => ({\r\n    nameRoom: n.nameRoom,\r\n    type: n.type,\r\n    numberNotificationUnRead: n.numberNotificationUnRead,\r\n    id: n.id\r\n  })), n => (_.includes(n.nameRoom.toLowerCase(), inputValue.toLowerCase())))\r\n  const lightTheme = props.changeTheme;\r\n  const logOut = () =>{\r\n    history.goBack();\r\n  }\r\n  return (\r\n    <div\r\n      className={classNames('ListRoom', {\r\n        ListRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div\r\n        className={classNames('Header-ListRoom', {\r\n          HeaderListRoomLightTheme: lightTheme === true,\r\n        })}\r\n      >\r\n        <div>\r\n          <div className='Top-Header-ListRoom'>\r\n            <h4>ddtsoft</h4>\r\n          </div>\r\n          <div className='Bot-Header-ListRoom'>\r\n            <FaCircle className='Icon-Circle' />\r\n            <h6>{props.currentUser.attributes.name}</h6>\r\n          </div>\r\n        </div>\r\n        <div className='LogOut' onClick={logOut} >\r\n          Log-Out\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Body-ListRoom'>\r\n        <div className=\"wrapper\">\r\n          <div className=\"search-icon\">\r\n            <input\r\n              className={classNames('search-circle', {\r\n                SearchCircleLightTheme: lightTheme === true,\r\n              })}\r\n\r\n              type=\"text\" onChange={searchRoom} />\r\n            <div className=\"search-bar\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='Show-ListRoom'>\r\n          {\r\n            _.map(ListRoomArr, (item, index) =>\r\n              <div\r\n                className={classNames('Room', {\r\n                  RoomSelected: currentRoomOnClick === item.id,\r\n                  RemoveHover: currentRoomMouseDown === item.id\r\n                })}\r\n                key={index}\r\n                onClick={() => onClickRoom(item.id)}\r\n                onMouseDown={() => setCurrentRoomMouseDown(item.id)}\r\n              >\r\n                <div\r\n                  className={classNames('Icon-And-NameRoom', {\r\n                    IconAndNameRoomLightTheme: lightTheme === true,\r\n                  })}\r\n                >\r\n                  {\r\n                    item.type === 'Work' ?\r\n                      <MdWork className='Icon-Left' />\r\n                      :\r\n                      item.type === 'Shopping' ?\r\n                        <GiLargeDress className='Icon-Left' />\r\n                        :\r\n                        item.type === 'Party' ?\r\n                          <GiMusicalNotes />\r\n                          : null\r\n                  }\r\n                  <div className='NameRoom'>\r\n                    {item.nameRoom}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={classNames('AddMember-And-NotificationUnRead', {\r\n                    MoveToCenter: currentRoomOnClick === item.id || item.numberNotificationUnRead === 0,\r\n                  })}\r\n                >\r\n                  <AddMember />\r\n                  <div\r\n                    className={classNames('NotificationUnRead', {\r\n                      NotificationRead: currentRoomOnClick === item.id,\r\n                      HideNotificationRead: item.numberNotificationUnRead === 0\r\n                    })}\r\n                  >\r\n                    {\r\n                      item.numberNotificationUnRead\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme,\r\n    listRoom: state.listRoom,\r\n    currentRoom: state.currentRoom,\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurrentRoom: (data) => { dispatch(actions.setCurrentRoom(data)) },\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ListRoom);","import React from 'react';\r\nimport './DayNight.scss';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nfunction DayNight(props) {\r\n  const changeTheme = () => {\r\n    props.setChangeTheme();\r\n  }\r\n  return (\r\n    <div className=\"toggleWrapper\">\r\n      <input type=\"checkbox\" className=\"dn\" id=\"dn\" onChange={changeTheme} />\r\n      <label for=\"dn\" className=\"toggle\">\r\n        <span className=\"toggle__handler\">\r\n          <span className=\"crater crater--1\"></span>\r\n          <span className=\"crater crater--2\"></span>\r\n          <span className=\"crater crater--3\"></span>\r\n        </span>\r\n        <span className=\"star star--1\"></span>\r\n        <span className=\"star star--2\"></span>\r\n        <span className=\"star star--3\"></span>\r\n        <span className=\"star star--4\"></span>\r\n        <span className=\"star star--5\"></span>\r\n        <span className=\"star star--6\"></span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeTheme: () => { dispatch(actions.setChangeTheme()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(DayNight);","import React from 'react';\r\nimport './SwitchLanguage.css'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nconst SwitchLanguage = (props) => {\r\n  const letSwitchLanguage = () => {\r\n    props.setChangeVietNamLanguage();\r\n  }\r\n  return (\r\n    <div className='SwitchLanguage'>\r\n      <label className=\"rocker rocker-small\">\r\n        <input type=\"checkbox\" onClick={letSwitchLanguage} />\r\n        <span className=\"switch-left\">En</span>\r\n        <span className=\"switch-right\">Vi</span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeVietNamLanguage: () => { dispatch(actions.setChangeVietNamLanguage()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(SwitchLanguage);","import React from 'react';\r\nimport { PopoverBody, Row, Col, UncontrolledPopover } from 'reactstrap';\r\nimport { FaRegSmileWink } from 'react-icons/fa';\r\nimport './Icon.css'\r\nimport _ from 'lodash'\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames'\r\n\r\nconst Emoji = (props) => {\r\n  const chooseEmoji = (item) => {\r\n    props.addEmoji(item);\r\n  }\r\n  return (\r\n    <div className='IconPopover'>\r\n      <div id=\"PopoverLegacy1\" >\r\n        <FaRegSmileWink />\r\n      </div>\r\n      <UncontrolledPopover className='All-Popover' trigger=\"legacy\" placement=\"top-end\" target=\"PopoverLegacy1\" hideArrow={true} >\r\n        <PopoverBody id='scroll-body-icon'\r\n          className={classNames('PopoverBody', {\r\n            PopoverBodyLightTheme: props.changeTheme === true,\r\n          })}\r\n        >\r\n          <Row>\r\n            {\r\n              _.map(Array.from(props.Emoji), (item, index) =>\r\n                <Col sm=\"2\" key={index}>\r\n                  <p className='p-icon'\r\n                    onClick={() => chooseEmoji(item)}\r\n                  >\r\n                    {item}\r\n                  </p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </PopoverBody>\r\n      </UncontrolledPopover>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    Emoji: state.Emoji,\r\n    changeTheme: state.changeTheme,\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Emoji);","import React from 'react';\r\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { FaRegChartBar } from 'react-icons/fa';\r\nimport './PieChart.css'\r\nimport { VictoryPie } from 'victory'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames'\r\n\r\nconst PieChart = (props) => {\r\n  const lightTheme = props.changeTheme;\r\n  let colorScale = [\"cyan\", \"navy\"];\r\n  if (lightTheme === false) {\r\n    colorScale = [\"green\", \"red\"];\r\n  }\r\n  return (\r\n    <div className='PieChart'>\r\n      <FaRegChartBar id=\"PopoverLegacy\" />\r\n      <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"PopoverLegacy\">\r\n        <PopoverHeader\r\n          className={classNames('Header-Chart', {\r\n            HeaderChartBodyLightTheme: lightTheme === false\r\n          })}\r\n        >\r\n          Chart\r\n        </PopoverHeader>\r\n        <PopoverBody\r\n          className={classNames('PieChart-Body', {\r\n            PieChartBodyLightTheme: lightTheme === false\r\n          })}\r\n        >\r\n          <VictoryPie\r\n            colorScale={colorScale}\r\n            innerRadius={100}\r\n            labels={() => { }} // ẩn đi label\r\n            data={[\r\n              { x: \"Online\", y: 1 },\r\n              { x: \"Offline\", y: _.uniqBy(_.find(props.dataRoom, { id: props.currentRoom }).data, 'name').length - 1 }\r\n            ]}\r\n          />\r\n          <div className='Info-Chart'>\r\n            <div className='Online'>\r\n              <div style={{ background: colorScale[0] }} className='circle-div' />\r\n              <div\r\n                className={classNames('state-number', {\r\n                  StateNumberBodyLightTheme: lightTheme === false\r\n                })}\r\n              >\r\n                <p>Online:</p>\r\n                <p>1</p>\r\n              </div>\r\n            </div>\r\n            <div className='Offline'>\r\n              <div style={{ background: colorScale[1] }} className='circle-div' />\r\n              <div\r\n                className={classNames('state-number', {\r\n                  StateNumberBodyLightTheme: lightTheme === false\r\n                })}\r\n              >\r\n                <p>Offline:</p>\r\n                <p>{_.uniqBy(_.find(props.dataRoom, { id: props.currentRoom }).data, 'name').length - 1}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </PopoverBody>\r\n      </UncontrolledPopover>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(PieChart);","import React, { useState, useRef, useEffect } from 'react';\r\nimport './ContentRoom.css';\r\nimport { FaFolderPlus } from 'react-icons/fa';\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport { MdPeople, MdGif } from 'react-icons/md';\r\nimport * as actions from '../actions/index';\r\nimport DayNight from './Switch/DayNight'\r\nimport SwitchLanguage from './Modal/SwitchLanguage'\r\nimport IconPopover from './Popovers/Icon'\r\nimport { nextTick } from 'q';\r\nimport Masonry from 'react-masonry-css'\r\nimport marked from 'marked';\r\nimport toBr from 'newline-to-br';\r\nimport PieChart from './Popovers/PieChart'\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nfunction ContentRoom(props) {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => {\r\n    setTooltipOpen(!tooltipOpen);\r\n  }\r\n  //\r\n  const valueMessage = props.valueMessage;\r\n  const wrapperRef = useRef(); //hook\r\n  const mainRoomRef = useRef(); //hook\r\n  const [clickOnInput, setClickOnInput] = useState(false);\r\n  const [showGif, setShowGif] = useState(false);\r\n  const clickOnThisInput = () => {\r\n    setClickOnInput(true);\r\n    document.addEventListener('click', clickOutSide)\r\n  }\r\n  const clickOutSide = (event) => {\r\n    const { target } = event;\r\n    if (!wrapperRef.current.contains(target)) {\r\n      setClickOnInput(false)\r\n      document.removeEventListener('click', clickOutSide)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', sendMessage)\r\n    return function cleanup() {\r\n      document.removeEventListener('keydown', sendMessage)\r\n    };\r\n  });\r\n  const sendMessage = (event) => {\r\n    // valueMessage.trim() loại bỏ khoảng trống để check empty text area\r\n    if (event.keyCode === 13 && !event.shiftKey && valueMessage.trim() !== '' && clickOnInput === true) {\r\n      props.setSendMessage(props.currentRoom, valueMessage);\r\n      props.setValueMessage('');\r\n      // khi send messenger thì chuyển xuống cuối để đọc tin nhắn mới nhất\r\n      mainRoomRef.current.scrollTop = mainRoomRef.current.scrollHeight\r\n    }\r\n  }\r\n  const showInfoRoom = () => {\r\n    props.setShowInfoRoom();\r\n  }\r\n  const changeInputValue = (e) => {\r\n    props.setValueMessage(e.target.value);\r\n  }\r\n  const addEmoji = (item) => {\r\n    props.setValueMessage(`${valueMessage}${item}`)\r\n  }\r\n  const letShowGif = (item) => {\r\n    props.setSendGif(props.currentRoom, item)\r\n    setShowGif(!showGif)\r\n    //nextTich là hàm call back đợi cho mọi thứ render (virtual dom) xong xuôi hết mới chạy \r\n    nextTick(() => {\r\n      // khi send messenger thì chuyển xuống cuối để đọc tin nhắn mới nhất\r\n      mainRoomRef.current.scrollTop = mainRoomRef.current.scrollHeight\r\n    })\r\n  }\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div\r\n      className={classNames('ContentRoom', {\r\n        ContentRoomLightTheme: lightTheme === true,\r\n        MaxWidth: props.showInfoRoom === false\r\n      })}\r\n    >\r\n      <div className='Header-ContentRoom'>\r\n        <p className='Name-Room'># {_.find(props.dataRoom, { id: props.currentRoom }).nameRoom}</p>\r\n        {/* số người hiện tại trong phòng dùng uniqBy để lọc bỏ trùng ặp về tên */}\r\n        <div className='Number-People-Room'>\r\n          {props.changeVietNamLanguage ?\r\n            <p>Current number of people in the room : {_.uniqBy(_.find(props.dataRoom, { id: props.currentRoom }).data, 'id').length}</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.CurrentNumberOfPeopleInTheRoom} : {_.uniqBy(_.find(props.dataRoom, { id: props.currentRoom }).data, 'id').length}</p>\r\n          }\r\n          {props.changeVietNamLanguage ?\r\n            <p>Online people : ???</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.OnlinePeople} : ???</p>\r\n          }\r\n        </div>\r\n        <PieChart />\r\n        <div className='Icon-Header-ContentRoom'>\r\n          <SwitchLanguage />\r\n          <div className='Switch-Day-Night'>\r\n            <DayNight />\r\n          </div>\r\n          <MdPeople\r\n            className={classNames('MdPeople', {\r\n              MdPeopleLightTheme: lightTheme === true,\r\n              LightThisIcon: props.showInfoRoom === true,\r\n              MdPeopleLightThemeLightThisIcon: lightTheme === true && props.showInfoRoom === true\r\n            })}\r\n            onClick={showInfoRoom} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={classNames('main-room', {\r\n          MainRoomLightTheme: lightTheme === true\r\n        })}\r\n        id=\"scrollbar-style\"\r\n        ref={mainRoomRef}\r\n      >\r\n        {\r\n          _.map(_.find(props.dataRoom, { id: props.currentRoom }).data, (item, index) =>\r\n            <div className='Chat-Message' key={index} >\r\n              <div\r\n                className={classNames('Custom-Container', {\r\n                  CustomContainerLightTheme: lightTheme === true\r\n                })}\r\n              >\r\n                <img src={item.avatar} alt='Img-User' href=\"#\" id=\"TooltipExample\" />\r\n                <Tooltip className='Tooltip' placement=\"right\" isOpen={tooltipOpen} target=\"TooltipExample\" toggle={toggle}>\r\n                  <div className='Info-User-On-Chat'>\r\n                  </div>\r\n                </Tooltip>\r\n                <div\r\n                  className={classNames('Name-Time-Message', {\r\n                    NameTimeMessageLightTheme: lightTheme === true\r\n                  })}\r\n                >\r\n                  <div className='Name-Time'>\r\n                    <p className='Name'>{item.name}</p>\r\n                    <p className='Time'>{item.time}</p>\r\n                  </div>\r\n                  {\r\n                    item.message !== undefined ?\r\n                      <div className='Show-Message' dangerouslySetInnerHTML={{ __html: toBr(marked(item.message)) }} />\r\n                      :\r\n                      <img src={item.gif} alt='gif' />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n\r\n      <div\r\n        className={classNames('Footer-ContentRoom', {\r\n          FooterContentRoomLightTheme: lightTheme === true\r\n        })}\r\n      >\r\n        <div\r\n          className={classNames('Message', {\r\n            ClickMessage: clickOnInput === true,\r\n            MessageLightTheme: lightTheme === true,\r\n            ClickMessageMessageLightTheme: clickOnInput === true && lightTheme === true\r\n          })}\r\n        >\r\n          <FaFolderPlus\r\n            className={classNames('Footer-Icon', {\r\n              ClickIcon: clickOnInput === true,\r\n              FooterIconLightTheme: lightTheme === true,\r\n              ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n            })}\r\n          />\r\n          <textarea className='Footer-Input'\r\n            type=\"textarea\"\r\n            ref={wrapperRef}\r\n            onClick={clickOnThisInput}\r\n            onChange={changeInputValue}\r\n            value={valueMessage}\r\n          />\r\n          <div className='Footer-Icon-Right'>\r\n            <MdGif\r\n              className={classNames('Footer-Icon Gif-Icon', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n              onClick={() => setShowGif(!showGif)}\r\n            />\r\n            <div\r\n              className={classNames('Footer-Icon Icon-Popover', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n            >\r\n              <IconPopover addEmoji={addEmoji} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classNames('test', {\r\n          testLightTheme: lightTheme === true,\r\n          ShowGif: showGif === true\r\n        })}\r\n          id=\"test-scrollbar-style\">\r\n          <Masonry\r\n            breakpointCols={5}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n          >\r\n            {_.map(props.arrGif, (item, index) => (\r\n              <div className='div-gif' key={index}>\r\n                <img className='img-gif'\r\n                  src={item}\r\n                  alt='gif'\r\n                  onClick={() => letShowGif(item)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Masonry>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    arrGif: state.arrGif,\r\n    valueMessage: state.valueMessage,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setShowInfoRoom: () => { dispatch(actions.setShowInfoRoom()) },\r\n    setSendMessage: (nameRoom, message) => { dispatch(actions.setSendMessage({ nameRoom: nameRoom, message: message })) },\r\n    setValueMessage: (data) => { dispatch(actions.setValueMessage(data)) },\r\n    setSendGif: (nameRoom, gif) => { dispatch(actions.setSendGif({ nameRoom: nameRoom, gif: gif })) }\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ContentRoom);","import React, { useState } from 'react';\r\nimport { Collapse, CardBody, Card } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport './IntroRoom.css'\r\nimport _ from 'lodash'\r\nimport classNames from 'classnames'\r\n\r\nconst IntroRoom = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div >\r\n      <div className='IntroRoom' onClick={toggle}>\r\n        {\r\n          props.changeVietNamLanguage ?\r\n            <p>Info Room</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.InfoRoom}</p>\r\n        }\r\n      </div>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card>\r\n          <CardBody\r\n            className={classNames('Body-IntroRoom', {\r\n              BodyIntroRoomLightTheme: lightTheme === false\r\n            })}\r\n          >\r\n            {\r\n              _.find(props.dataRoom, { id: props.currentRoom }).Intro\r\n            }\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(IntroRoom);","import React, { useState, useRef } from 'react';\r\nimport './InfoRoom.css';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport classNames from 'classnames'\r\nimport IntroRoom from './Collapse/IntroRoom'\r\n\r\nfunction InfoRoom(props) {\r\n  const ahihiRef = useRef();\r\n  const testRef = useRef();\r\n  const [indexDiv, setIndexDiv] = useState(-1);\r\n  const [divStyle, setdivStyle] = useState({});\r\n  const ListRoomArr = _.uniqBy(_.map(_.find(props.dataRoom, { id: props.currentRoom }).data, (item) => ({\r\n    avatar: item.avatar,\r\n    name: item.name,\r\n    level: item.level\r\n  })), 'name');\r\n  const lightTheme = props.changeTheme;\r\n  const showInfoDiv = (e, index) => {\r\n    setIndexDiv(index)\r\n    document.addEventListener('click', clickOutSide)\r\n    if (window.innerHeight - e.target.offsetTop - ahihiRef.current.scrollTop < 0) {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop - 250,\r\n      })\r\n    }\r\n    if (e.target.offsetTop - ahihiRef.current.scrollTop > 250) {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop - 200,\r\n      })\r\n    }\r\n    else {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop,\r\n      })\r\n    }\r\n  }\r\n  const clickOutSide = (event) => {\r\n    const { target } = event;\r\n    if (!ahihiRef.current.contains(target)) {\r\n      setIndexDiv(-1)\r\n      document.removeEventListener('click', clickOutSide)\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className={classNames('InfoRoom', {\r\n        HideThisDiv: props.showInfoRoom === false,\r\n        InfoRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div className='Header-InfoRoom' >\r\n        <IntroRoom />\r\n      </div>\r\n      <div ref={ahihiRef}\r\n        className={classNames('Body-InfoRoom', {\r\n          BodyInfoRoomLightTheme: lightTheme === true,\r\n        })}\r\n        id=\"scrollbar\">\r\n\r\n        <div className='Admin' >\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Admin</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Admin}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n          <div className='User-InfoRoom'>\r\n            <div className='Avatar-InfoRoom' ref={testRef}>\r\n              <img src={_.filter(ListRoomArr, { level: 'Admin' })[0].avatar} alt='Img-User'\r\n                onClick={(e) => showInfoDiv(e, 99999)}\r\n              />\r\n            </div>\r\n            <div className='Name-User-InfoRoom'>\r\n              <p>{_.filter(ListRoomArr, { level: 'Admin' })[0].name}</p>\r\n            </div>\r\n            {/* infoADmin */}\r\n            <div\r\n              className={classNames('AhihiTest', {\r\n                addZindexCss: 99999 === indexDiv,\r\n              })}\r\n              style={divStyle}>\r\n              <div className='Top'>\r\n                <img src={_.filter(ListRoomArr, { level: 'Admin' })[0].avatar} alt='Img-User' />\r\n                <div className='name-show-info'>\r\n                  <p>{_.filter(ListRoomArr, { level: 'Admin' })[0].name}</p>\r\n                  <p\r\n                    className={classNames('levelAdmin', {\r\n                      levelAdminLightTheme: lightTheme === true,\r\n                    })}\r\n                  >Admin</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* infoADmin */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className='Admin' >\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Member</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Member}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n          <div className='Member' >\r\n            {_.map(_.filter(ListRoomArr, { level: 'Member' }), (item, index) =>\r\n              <div className='User-InfoRoom' key={index} >\r\n                <div className='Avatar-InfoRoom'>\r\n                  <img src={item.avatar} alt='Img-User' onClick={(e) => showInfoDiv(e, index)} />\r\n                </div>\r\n                <div className='Name-User-InfoRoom'>\r\n                  <p>{item.name}</p>\r\n                </div>\r\n                {/* Member-Info */}\r\n                <div\r\n                  className={classNames('AhihiTest', {\r\n                    addZindexCss: index === indexDiv,\r\n                  })}\r\n                  style={divStyle}>\r\n                  <div className='Top'>\r\n                    <img src={item.avatar} alt='Img-User' />\r\n                    <div className='name-show-info'>\r\n                      <p>{item.name}</p>\r\n                      <p\r\n                        className={classNames('levelMember', {\r\n                          levelMemberLightTheme: lightTheme === true,\r\n                        })}\r\n                      >Member</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Member-Info */}\r\n              </div>)\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(InfoRoom);","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport ListRoom from './components/ListRoom'\r\nimport ContentRoom from './components/ContentRoom'\r\nimport InfoRoom from './components/InfoRoom'\r\nimport * as actions from './actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    props.getApi(props.currentUser);\r\n  }, [])\r\n  return (\r\n    <div className=\"App\">\r\n      <ListRoom />\r\n      <ContentRoom />\r\n      <InfoRoom />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApi: (data) => { dispatch(actions.getApi(data)) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(App);","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router, Switch, Route\r\n} from \"react-router-dom\";\r\nimport Login from './components/Login/Login'\r\nimport App from './App'\r\n\r\nfunction Boss(props) {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/App\">\r\n            <App />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\nexport default Boss;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport myReducer from './reduces/index';\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport Boss from './Boss';\r\n\r\nconst store = createStore(\r\n  myReducer,\r\n  applyMiddleware(thunk),\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Boss />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}