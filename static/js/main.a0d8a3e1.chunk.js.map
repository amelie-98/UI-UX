{"version":3,"sources":["components/Modal/AddMember.js","const/actionTypes.js","components/ListRoom.js","actions/index.js","components/Switch/DayNight.js","components/Modal/SwitchLanguage.js","components/Popovers/Icon.js","components/ContentRoom.js","components/InfoRoom.js","App.js","serviceWorker.js","reduces/dataRoom.js","reduces/currentRoom.js","reduces/showInfoRoom.js","reduces/changeTheme.js","reduces/dataVietNamLanguage.js","reduces/changeVietNamLanguage.js","reduces/arrGif.js","reduces/Emoji.js","reduces/valueMessage.js","reduces/index.js","index.js"],"names":["connect","state","changeTheme","dataVietNamLanguage","changeVietNamLanguage","props","className","useState","modal","setModal","toggle","lightTheme","onClick","classNames","IconAddMemberLightTheme","Modal","isOpen","ModalHeader","AddMemberToThisRoom","ModalBody","SearchCircleLightTheme","type","dataRoom","dispatch","setCurrentRoom","data","actionTypes","actions","currentRoomMouseDown","setCurrentRoomMouseDown","currentRoomOnClick","setCurrentRoomOnClick","inputValue","setInputValue","ListRoomArr","_","filter","map","n","nameRoom","numberNotificationUnRead","includes","toLowerCase","ListRoomLightTheme","HeaderListRoomLightTheme","onChange","e","target","value","item","index","RoomSelected","RemoveHover","key","name","onMouseDown","IconAndNameRoomLightTheme","MoveToCenter","NotificationRead","setChangeTheme","id","for","setChangeVietNamLanguage","Emoji","popoverOpen","setPopoverOpen","Popover","placement","hideArrow","PopoverBody","PopoverBodyLightTheme","Row","Array","from","Col","sm","addEmoji","chooseEmoji","currentRoom","showInfoRoom","arrGif","valueMessage","setShowInfoRoom","setSendMessage","message","setValueMessage","setSendGif","gif","wrapperRef","useRef","mainRoomRef","clickOnInput","setClickOnInput","showGif","setShowGif","clickOutSide","event","current","contains","document","removeEventListener","useEffect","addEventListener","sendMessage","keyCode","shiftKey","scrollTop","scrollHeight","ContentRoomLightTheme","uniqBy","find","length","CurrentNumberOfPeopleInTheRoom","OnlinePeople","MdPeopleLightTheme","LightThisIcon","MdPeopleLightThemeLightThisIcon","MainRoomLightTheme","ref","CustomContainerLightTheme","src","avatar","alt","NameTimeMessageLightTheme","time","undefined","dangerouslySetInnerHTML","__html","marked","FooterContentRoomLightTheme","ClickMessage","MessageLightTheme","ClickMessageMessageLightTheme","ClickIcon","FooterIconLightTheme","ClickIconFooterIconLightTheme","testLightTheme","ShowGif","breakpointCols","columnClassName","nextTick","letShowGif","ahihiRef","testRef","indexDiv","setIndexDiv","divStyle","setdivStyle","level","showInfoDiv","window","innerHeight","offsetTop","position","top","HideThisDiv","InfoRoomLightTheme","InfoRoom","BodyInfoRoomLightTheme","Admin","addZindexCss","style","levelAdminLightTheme","Member","levelMemberLightTheme","App","Boolean","location","hostname","match","initialState","myReducer","action","findIndex","push","combineReducers","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0d8a3e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { MdPersonAdd } from 'react-icons/md';\r\nimport './AddMember.css'\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddMember = (props) => {\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div className='Model-AddMember'>\r\n      <MdPersonAdd onClick={toggle}\r\n        className={classNames('Icon-AddMember', {\r\n          IconAddMemberLightTheme: lightTheme === true,\r\n        })}\r\n      />\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          {\r\n            props.changeVietNamLanguage ?\r\n              <p>Add Member To This Room</p>\r\n              :\r\n              <p>{props.dataVietNamLanguage.AddMemberToThisRoom}</p>\r\n          }\r\n        </ModalHeader>\r\n        <ModalBody className='ModalBody'>\r\n          {/* css kính lúp để ở file ListRoom.css */}\r\n          <div className=\"wrapper\">\r\n            <div className=\"search-icon\">\r\n              <input\r\n                className={classNames('search-circle', {\r\n                  SearchCircleLightTheme: lightTheme === true,\r\n                })}\r\n                type=\"text\" />\r\n              <div className=\"search-bar\" />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(AddMember);","export default {\r\n  setCurrentRoom: 'SET_CURRENT_ROOM',\r\n  setShowInfoRoom: 'SET_SHOW_INFO_ROOM',\r\n  setChangeTheme: 'SET_CHANGE_THEME',\r\n  setChangeVietNamLanguage: 'SET_CHANGE_VIETNAM_LANGUAGE',\r\n  setSendMessage: 'SET_SEND_MESSAGE',\r\n  setValueMessage: 'SET_VALUE_MESSAGE',\r\n  setSendGif: 'SET_SEND_GIF'\r\n};","import React, { useState } from 'react';\r\nimport './ListRoom.css';\r\nimport _ from 'lodash'\r\nimport { MdWork } from 'react-icons/md';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport { GiLargeDress, GiMusicalNotes } from 'react-icons/gi'\r\nimport classNames from 'classnames'\r\nimport AddMember from './Modal/AddMember'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nfunction ListRoom(props) {\r\n  const [currentRoomMouseDown, setCurrentRoomMouseDown] = useState('');\r\n  const [currentRoomOnClick, setCurrentRoomOnClick] = useState('');\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const onClickRoom = (name) => {\r\n    setCurrentRoomOnClick(name)\r\n    props.setCurrentRoom(name)\r\n  }\r\n  const searchRoom = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n  const ListRoomArr = _.filter(_.map(props.dataRoom, n => ({\r\n    nameRoom: n.nameRoom,\r\n    type: n.type,\r\n    numberNotificationUnRead: n.numberNotificationUnRead\r\n  })), n => (_.includes(n.nameRoom.toLowerCase(), inputValue.toLowerCase())))\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div\r\n      className={classNames('ListRoom', {\r\n        ListRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div\r\n        className={classNames('Header-ListRoom', {\r\n          HeaderListRoomLightTheme: lightTheme === true,\r\n        })}\r\n      >\r\n        <div className='Top-Header-ListRoom'>\r\n          <h4>ddtsoft</h4>\r\n        </div>\r\n        <div className='Bot-Header-ListRoom'>\r\n          <FaCircle className='Icon-Circle' />\r\n          <h6>Do Tung Duong</h6>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Body-ListRoom'>\r\n        <div className=\"wrapper\">\r\n          <div className=\"search-icon\">\r\n            <input\r\n              className={classNames('search-circle', {\r\n                SearchCircleLightTheme: lightTheme === true,\r\n              })}\r\n\r\n              type=\"text\" onChange={searchRoom} />\r\n            <div className=\"search-bar\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='Show-ListRoom'>\r\n          {\r\n            _.map(ListRoomArr, (item, index) =>\r\n              <div\r\n                className={classNames('Room', {\r\n                  RoomSelected: currentRoomOnClick === item.nameRoom,\r\n                  RemoveHover: currentRoomMouseDown === item.nameRoom\r\n                })}\r\n                key={index}\r\n                onClick={() => onClickRoom(item.nameRoom)}\r\n                onMouseDown={() => setCurrentRoomMouseDown(item.nameRoom)}\r\n              >\r\n                <div\r\n                  className={classNames('Icon-And-NameRoom', {\r\n                    IconAndNameRoomLightTheme: lightTheme === true,\r\n                  })}\r\n                >\r\n                  {\r\n                    item.type === 'Work' ?\r\n                      <MdWork className='Icon-Left' />\r\n                      :\r\n                      item.type === 'Shopping' ?\r\n                        <GiLargeDress className='Icon-Left' />\r\n                        :\r\n                        item.type === 'Party' ?\r\n                          <GiMusicalNotes />\r\n                          : null\r\n                  }\r\n                  <div className='NameRoom'>\r\n                    {item.nameRoom}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={classNames('AddMember-And-NotificationUnRead', {\r\n                    MoveToCenter: currentRoomOnClick === item.nameRoom,\r\n                  })}\r\n                >\r\n                  <AddMember />\r\n                  <div\r\n                    className={classNames('NotificationUnRead', {\r\n                      NotificationRead: currentRoomOnClick === item.nameRoom,\r\n                    })}\r\n                  >\r\n                    {item.numberNotificationUnRead}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurrentRoom: (data) => { dispatch(actions.setCurrentRoom(data)) },\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ListRoom);","import actionTypes from '../const/actionTypes';\r\n\r\nexport const setCurrentRoom = (data) => { return { type: actionTypes.setCurrentRoom, data: data } }\r\n\r\nexport const setShowInfoRoom = () => { return { type: actionTypes.setShowInfoRoom } }\r\n\r\nexport const setChangeTheme = () => { return { type: actionTypes.setChangeTheme } }\r\n\r\nexport const setChangeVietNamLanguage = () => { return { type: actionTypes.setChangeVietNamLanguage } }\r\n\r\nexport const setSendMessage = (data) => { return { type: actionTypes.setSendMessage, data: data } }\r\n\r\nexport const setValueMessage = (data) => { return { type: actionTypes.setValueMessage, data: data } }\r\n\r\nexport const setSendGif = (data) => { return { type: actionTypes.setSendGif, data: data } }","import React from 'react';\r\nimport './DayNight.scss';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nfunction DayNight(props) {\r\n  const changeTheme = () => {\r\n    props.setChangeTheme();\r\n  }\r\n  return (\r\n    <div className=\"toggleWrapper\">\r\n      <input type=\"checkbox\" className=\"dn\" id=\"dn\" onChange={changeTheme} />\r\n      <label for=\"dn\" className=\"toggle\">\r\n        <span className=\"toggle__handler\">\r\n          <span className=\"crater crater--1\"></span>\r\n          <span className=\"crater crater--2\"></span>\r\n          <span className=\"crater crater--3\"></span>\r\n        </span>\r\n        <span className=\"star star--1\"></span>\r\n        <span className=\"star star--2\"></span>\r\n        <span className=\"star star--3\"></span>\r\n        <span className=\"star star--4\"></span>\r\n        <span className=\"star star--5\"></span>\r\n        <span className=\"star star--6\"></span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeTheme: () => { dispatch(actions.setChangeTheme()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(DayNight);","import React from 'react';\r\nimport './SwitchLanguage.css'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nconst SwitchLanguage = (props) => {\r\n  const letSwitchLanguage = () => {\r\n    props.setChangeVietNamLanguage();\r\n  }\r\n  return (\r\n    <div className='SwitchLanguage'>\r\n      <label className=\"rocker rocker-small\">\r\n        <input type=\"checkbox\" onClick={letSwitchLanguage} />\r\n        <span className=\"switch-left\">En</span>\r\n        <span className=\"switch-right\">Vi</span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeVietNamLanguage: () => { dispatch(actions.setChangeVietNamLanguage()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(SwitchLanguage);","import React, { useState } from 'react';\r\nimport { Popover, PopoverBody, Row, Col } from 'reactstrap';\r\nimport { FaRegSmileWink } from 'react-icons/fa';\r\nimport './Icon.css'\r\nimport _ from 'lodash'\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames'\r\n\r\nconst Emoji = (props) => {\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n  const chooseEmoji = (item) => {\r\n    props.addEmoji(item);\r\n  }\r\n  return (\r\n    <div className='IconPopover'>\r\n      <div id=\"Popover1\" >\r\n        <FaRegSmileWink />\r\n      </div>\r\n      <Popover\r\n        placement=\"top-end\"\r\n        isOpen={popoverOpen}\r\n        target=\"Popover1\"\r\n        toggle={toggle}\r\n        className='All-Popover'\r\n        hideArrow={true}\r\n      >\r\n        <PopoverBody id='scroll-body-icon'\r\n          className={classNames('PopoverBody', {\r\n            PopoverBodyLightTheme: props.changeTheme === true,\r\n          })}\r\n        >\r\n          <Row>\r\n            {\r\n              _.map(Array.from(props.Emoji), (item, index) =>\r\n                <Col sm=\"2\" key={index}>\r\n                  <p\r\n                    onClick={() => chooseEmoji(item)}\r\n                  >\r\n                    {item}\r\n                  </p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    Emoji: state.Emoji,\r\n    changeTheme: state.changeTheme,\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Emoji);","import React, { useState, useRef, useEffect } from 'react';\r\nimport './ContentRoom.css';\r\nimport { FaFolderPlus } from 'react-icons/fa';\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport { MdPeople, MdGif } from 'react-icons/md';\r\nimport * as actions from '../actions/index';\r\nimport DayNight from './Switch/DayNight'\r\nimport SwitchLanguage from './Modal/SwitchLanguage'\r\nimport IconPopover from './Popovers/Icon'\r\nimport { nextTick } from 'q';\r\nimport Masonry from 'react-masonry-css'\r\nimport marked from 'marked';\r\n\r\nfunction ContentRoom(props) {\r\n  const valueMessage = props.valueMessage;\r\n  const wrapperRef = useRef(); //hook\r\n  const mainRoomRef = useRef(); //hook\r\n  const [clickOnInput, setClickOnInput] = useState(false);\r\n  const [showGif, setShowGif] = useState(false);\r\n  const clickOnThisInput = () => {\r\n    setClickOnInput(true);\r\n    document.addEventListener('click', clickOutSide)\r\n  }\r\n  const clickOutSide = (event) => {\r\n    const { target } = event;\r\n    if (!wrapperRef.current.contains(target)) {\r\n      setClickOnInput(false)\r\n      document.removeEventListener('click', clickOutSide)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', sendMessage)\r\n    return function cleanup() {\r\n      document.removeEventListener('keydown', sendMessage)\r\n    };\r\n  });\r\n  const sendMessage = (event) => {\r\n    if (event.keyCode === 13 && !event.shiftKey && valueMessage !== '' && clickOnInput === true) {\r\n      props.setSendMessage(props.currentRoom, valueMessage);\r\n      props.setValueMessage('');\r\n      // khi send messenger thì chuyển xuống cuối để đọc tin nhắn mới nhất\r\n      mainRoomRef.current.scrollTop = mainRoomRef.current.scrollHeight\r\n    }\r\n  }\r\n  const showInfoRoom = () => {\r\n    props.setShowInfoRoom();\r\n  }\r\n  const changeInputValue = (e) => {\r\n    props.setValueMessage(e.target.value);\r\n  }\r\n  const addEmoji = (item) => {\r\n    props.setValueMessage(`${valueMessage}${item}`)\r\n  }\r\n  const letShowGif = (item) => {\r\n    props.setSendGif(props.currentRoom, item)\r\n    setShowGif(!showGif)\r\n    //nextTich là hàm call back đợi cho mọi thứ render (virtual dom) xong xuôi hết mới chạy \r\n    nextTick(() => {\r\n      // khi send messenger thì chuyển xuống cuối để đọc tin nhắn mới nhất\r\n      mainRoomRef.current.scrollTop = mainRoomRef.current.scrollHeight\r\n    })\r\n  }\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div\r\n      className={classNames('ContentRoom', {\r\n        ContentRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div className='Header-ContentRoom'>\r\n        <p className='Name-Room'># {props.currentRoom}</p>\r\n        {/* số người hiện tại trong phòng dùng uniqBy để lọc bỏ trùng ặp về tên */}\r\n        <div className='Number-People-Room'>\r\n          {props.changeVietNamLanguage ?\r\n            <p>Current number of people in the room : {_.uniqBy(_.find(props.dataRoom, { nameRoom: props.currentRoom }).data, 'name').length}</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.CurrentNumberOfPeopleInTheRoom} : {_.uniqBy(_.find(props.dataRoom, { nameRoom: props.currentRoom }).data, 'name').length}</p>\r\n          }\r\n          {props.changeVietNamLanguage ?\r\n            <p>Online people : ???</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.OnlinePeople} : ???</p>\r\n          }\r\n        </div>\r\n        <div className='Icon-Header-ContentRoom'>\r\n          <SwitchLanguage />\r\n          <div className='Switch-Day-Night'>\r\n            <DayNight />\r\n          </div>\r\n          <MdPeople\r\n            className={classNames('', {\r\n              MdPeopleLightTheme: lightTheme === true,\r\n              LightThisIcon: props.showInfoRoom === true,\r\n              MdPeopleLightThemeLightThisIcon: lightTheme === true && props.showInfoRoom === true\r\n            })}\r\n            onClick={showInfoRoom} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={classNames('main-room', {\r\n          MainRoomLightTheme: lightTheme === true\r\n        })}\r\n        id=\"scrollbar-style\"\r\n        ref={mainRoomRef}\r\n      >\r\n        {\r\n          _.map(_.find(props.dataRoom, { nameRoom: props.currentRoom }).data, (item, index) =>\r\n            <div className='Chat-Message' key={index} >\r\n              <div\r\n                className={classNames('Custom-Container', {\r\n                  CustomContainerLightTheme: lightTheme === true\r\n                })}\r\n              >\r\n                <img src={item.avatar} alt='Img-User' />\r\n                <div\r\n                  className={classNames('Name-Time-Message', {\r\n                    NameTimeMessageLightTheme: lightTheme === true\r\n                  })}\r\n                >\r\n                  <div className='Name-Time'>\r\n                    <p className='Name'>{item.name}</p>\r\n                    <p className='Time'>{item.time}</p>\r\n                  </div>\r\n                  {\r\n                    item.message !== undefined ?\r\n                      <div className='Show-Message' dangerouslySetInnerHTML={{ __html: marked(item.message) }} />\r\n                      :\r\n                      <img src={item.gif} alt='gif' />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n\r\n      <div\r\n        className={classNames('Footer-ContentRoom', {\r\n          FooterContentRoomLightTheme: lightTheme === true\r\n        })}\r\n      >\r\n        <div\r\n          className={classNames('Message', {\r\n            ClickMessage: clickOnInput === true,\r\n            MessageLightTheme: lightTheme === true,\r\n            ClickMessageMessageLightTheme: clickOnInput === true && lightTheme === true\r\n          })}\r\n        >\r\n          <FaFolderPlus\r\n            className={classNames('Footer-Icon', {\r\n              ClickIcon: clickOnInput === true,\r\n              FooterIconLightTheme: lightTheme === true,\r\n              ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n            })}\r\n          />\r\n          <textarea className='Footer-Input'\r\n            type=\"textarea\"\r\n            ref={wrapperRef}\r\n            onClick={clickOnThisInput}\r\n            onChange={changeInputValue}\r\n            value={valueMessage}\r\n          />\r\n          <div className='Footer-Icon-Right'>\r\n            <MdGif\r\n              className={classNames('Footer-Icon Gif-Icon', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n              onClick={() => setShowGif(!showGif)}\r\n            />\r\n            <div\r\n              className={classNames('Footer-Icon Icon-Popover', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n            >\r\n              <IconPopover addEmoji={addEmoji} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classNames('test', {\r\n          testLightTheme: lightTheme === true,\r\n          ShowGif: showGif === true\r\n        })}\r\n          id=\"test-scrollbar-style\">\r\n          <Masonry\r\n            breakpointCols={5}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n          >\r\n            {_.map(props.arrGif, (item, index) => (\r\n              <div className='div-gif' key={index}>\r\n                <img className='img-gif'\r\n                  src={item}\r\n                  alt='gif'\r\n                  onClick={() => letShowGif(item)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Masonry>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    arrGif: state.arrGif,\r\n    valueMessage: state.valueMessage,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setShowInfoRoom: () => { dispatch(actions.setShowInfoRoom()) },\r\n    setSendMessage: (nameRoom, message) => { dispatch(actions.setSendMessage({ nameRoom: nameRoom, message: message })) },\r\n    setValueMessage: (data) => { dispatch(actions.setValueMessage(data)) },\r\n    setSendGif: (nameRoom, gif) => { dispatch(actions.setSendGif({ nameRoom: nameRoom, gif: gif })) }\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ContentRoom);","import React, { useState, useRef } from 'react';\r\nimport './InfoRoom.css';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport classNames from 'classnames'\r\n\r\nfunction InfoRoom(props) {\r\n  const ahihiRef = useRef();\r\n  const testRef = useRef();\r\n  const [indexDiv, setIndexDiv] = useState(-1);\r\n  const [divStyle, setdivStyle] = useState({});\r\n  const ListRoomArr = _.uniqBy(_.map(_.find(props.dataRoom, { nameRoom: props.currentRoom }).data, (item) => ({\r\n    avatar: item.avatar,\r\n    name: item.name,\r\n    level: item.level\r\n  })), 'name');\r\n  const lightTheme = props.changeTheme;\r\n  const showInfoDiv = (e, index) => {\r\n    setIndexDiv(index)\r\n    document.addEventListener('click', clickOutSide)\r\n    if (window.innerHeight - e.target.offsetTop - ahihiRef.current.scrollTop < 0) {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop - 250,\r\n      })\r\n    }\r\n    if (e.target.offsetTop - ahihiRef.current.scrollTop > 250) {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop - 200,\r\n      })\r\n    }\r\n    else {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop,\r\n      })\r\n    }\r\n  }\r\n  const clickOutSide = (event) => {\r\n    const { target } = event;\r\n    if (!ahihiRef.current.contains(target)) {\r\n      setIndexDiv(-1)\r\n      document.removeEventListener('click', clickOutSide)\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className={classNames('InfoRoom', {\r\n        HideThisDiv: props.showInfoRoom === false,\r\n        InfoRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div className='Header-InfoRoom' >\r\n        {\r\n          props.changeVietNamLanguage ?\r\n            <p>Info Room</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.InfoRoom}</p>\r\n        }\r\n      </div>\r\n      <div ref={ahihiRef}\r\n        className={classNames('Body-InfoRoom', {\r\n          BodyInfoRoomLightTheme: lightTheme === true,\r\n        })}\r\n        id=\"scrollbar\">\r\n\r\n        <div className='Admin' >\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Admin</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Admin}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n          <div className='User-InfoRoom'>\r\n            <div className='Avatar-InfoRoom' ref={testRef}>\r\n              <img src={_.filter(ListRoomArr, { level: 'Admin' })[0].avatar} alt='Img-User'\r\n                onClick={(e) => showInfoDiv(e, 99999)}\r\n              />\r\n            </div>\r\n            <div className='Name-User-InfoRoom'>\r\n              <p>{_.filter(ListRoomArr, { level: 'Admin' })[0].name}</p>\r\n            </div>\r\n            {/* infoADmin */}\r\n            <div\r\n              className={classNames('AhihiTest', {\r\n                addZindexCss: 99999 === indexDiv,\r\n              })}\r\n              style={divStyle}>\r\n              <div className='Top'>\r\n                <img src={_.filter(ListRoomArr, { level: 'Admin' })[0].avatar} alt='Img-User' />\r\n                <div className='name-show-info'>\r\n                  <p>{_.filter(ListRoomArr, { level: 'Admin' })[0].name}</p>\r\n                  <p\r\n                    className={classNames('levelAdmin', {\r\n                      levelAdminLightTheme: lightTheme === true,\r\n                    })}\r\n                  >Admin</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* infoADmin */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className='Admin' >\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Member</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Member}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n          <div className='Member' >\r\n            {_.map(_.filter(ListRoomArr, { level: 'Member' }), (item, index) =>\r\n              <div className='User-InfoRoom' key={index} >\r\n                <div className='Avatar-InfoRoom'>\r\n                  <img src={item.avatar} alt='Img-User' onClick={(e) => showInfoDiv(e, index)} />\r\n                </div>\r\n                <div className='Name-User-InfoRoom'>\r\n                  <p>{item.name}</p>\r\n                </div>\r\n                {/* Member-Info */}\r\n                <div\r\n                  className={classNames('AhihiTest', {\r\n                    addZindexCss: index === indexDiv,\r\n                  })}\r\n                  style={divStyle}>\r\n                  <div className='Top'>\r\n                    <img src={item.avatar} alt='Img-User' />\r\n                    <div className='name-show-info'>\r\n                      <p>{item.name}</p>\r\n                      <p\r\n                        className={classNames('levelMember', {\r\n                          levelMemberLightTheme: lightTheme === true,\r\n                        })}\r\n                      >Member</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Member-Info */}\r\n              </div>)\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(InfoRoom);","import React from 'react';\nimport './App.css';\nimport ListRoom from './components/ListRoom'\nimport ContentRoom from './components/ContentRoom'\nimport InfoRoom from './components/InfoRoom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ListRoom />\n      <ContentRoom />\n      <InfoRoom />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actionTypes from '../const/actionTypes';\r\nimport _ from 'lodash'\r\n\r\nvar initialState = [\r\n  {\r\n    nameRoom: 'Work', type: 'Work', numberNotificationUnRead: '2', data: [\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Admin' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n    ],\r\n  },\r\n  {\r\n    nameRoom: 'Shopping', type: 'Shopping', numberNotificationUnRead: '4', data: [\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Admin' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n    ],\r\n  },\r\n  {\r\n    nameRoom: 'Party', type: 'Party', numberNotificationUnRead: '6', data: [\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Admin' },\r\n    ],\r\n  }\r\n]\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.setSendMessage:\r\n      state[_.findIndex(state, { nameRoom: action.data.nameRoom })].data.push({ avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: action.data.message, level: 'Member' });\r\n      return state;\r\n\r\n    case actionTypes.setSendGif:\r\n      state[_.findIndex(state, { nameRoom: action.data.nameRoom })].data.push({ avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', gif: action.data.gif, level: 'Member' });\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = 'Work';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setCurrentRoom:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setShowInfoRoom:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeTheme:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = {\r\n  InfoRoom: 'Thông Tin Phòng',\r\n  Admin: 'Người Quản Trị',\r\n  Member: 'Thành Viên',\r\n  AddMemberToThisRoom: 'Thêm Nhân Viên Vào Phòng Này',\r\n  CurrentNumberOfPeopleInTheRoom: 'Số Người Hiện Tại Trong Phòng',\r\n  OnlinePeople: 'Số Người Trực Tuyến'\r\n};\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeVietNamLanguage:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = [\r\n  'https://media.giphy.com/media/GAgLkuPIhozg4/giphy.gif',\r\n  'https://media.giphy.com/media/JRlqKEzTDKci5JPcaL/giphy.gif',\r\n  'https://media.giphy.com/media/3o7btXJQm5DD8ApubC/giphy.gif',\r\n  'https://media.giphy.com/media/3s0ddui7kadGg/giphy.gif',\r\n  'https://media.giphy.com/media/maINkm7zjcL4s/giphy.gif',\r\n  'https://media.giphy.com/media/TRdV7Bk5JVdVm/giphy.gif',\r\n  'https://media.giphy.com/media/8OTxSsEKzMs2A/giphy.gif',\r\n  'https://media.giphy.com/media/ptHRd4Rpeb11m/giphy.gif',\r\n  'https://media.giphy.com/media/jw99U8P9W4yOY/giphy.gif',\r\n  'https://media.giphy.com/media/kiOGNdQMj04SI/giphy.gif',\r\n  'https://media.giphy.com/media/U6IQE5XjiF5hm/giphy.gif',\r\n  'https://media.giphy.com/media/2y98KScHKeaQM/giphy.gif',\r\n  'https://media.giphy.com/media/H5AMoAO4JLPEI/giphy.gif',\r\n  'https://media.giphy.com/media/YHx48QSvcEFlC/giphy.gif',\r\n  'https://media.giphy.com/media/MlTMwvO9ZiWwU/giphy.gif',\r\n  'https://media.giphy.com/media/ZpRlGlevx07Mk/giphy.gif',\r\n  'https://media.giphy.com/media/12pwt3qlbVVBfy/giphy.gif',\r\n  'https://media.giphy.com/media/8Lc5xmvzRhlLy/giphy.gif',\r\n  'https://media.giphy.com/media/pIcez8CpT4ali/giphy.gif',\r\n  'https://media.giphy.com/media/DoHRW685Y1gru/giphy.gif',\r\n  'https://media.giphy.com/media/10Q2IMOHo3taQU/giphy.gif',\r\n  'https://media.giphy.com/media/4NuAILyDbmD16/giphy.gif',\r\n  'https://media.giphy.com/media/t5Ml3rCGNEddm/giphy.gif',\r\n  'https://media.giphy.com/media/RneIcLEosVuta/giphy.gif',\r\n  'https://media.giphy.com/media/F6132ctb9YARa/giphy.gif',\r\n  'https://media.giphy.com/media/Yv6RcuiyHYmn6/giphy.gif',\r\n  'https://media.giphy.com/media/lmFm5QZMzdmQ8/giphy.gif',\r\n  'https://media.giphy.com/media/13Q1xpydjvb8qs/giphy.gif',\r\n];\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = '😀😃😄😁😆😂🤣😊😇🙂🙃😉😌😍🥰😘😗😙😚😋😛😝😜🤪🤨🧐🤓😎🤩🥳😏😒😞😫😩🥺😢😭😤😠😡🤬🤯🐶🐱🐭🐹🐰🦊🐻🐼🐨🐯🦁🐮🐮🐷🐽🐸🐵🙈🙉🙊🐒🐔🐧🐦🐤🐣🐥🐙🦕🦎🐍🐢🐌🐝🌑🌘🌘🌗🌗⚽🏀🏈⚾🥎🎾🏐🏉🥏🎱🏓🏸🏒🏑🥍🏏🥅⛳';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = '';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setValueMessage:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\n\r\nimport dataRoom from './dataRoom'\r\nimport currentRoom from './currentRoom'\r\nimport showInfoRoom from './showInfoRoom'\r\nimport changeTheme from './changeTheme'\r\nimport dataVietNamLanguage from './dataVietNamLanguage'\r\nimport changeVietNamLanguage from './changeVietNamLanguage'\r\nimport arrGif from './arrGif'\r\nimport Emoji from './Emoji'\r\nimport valueMessage from './valueMessage'\r\n\r\nconst myReducer = combineReducers({\r\n  dataRoom: dataRoom,\r\n  currentRoom: currentRoom,\r\n  showInfoRoom: showInfoRoom,\r\n  changeTheme: changeTheme,\r\n  dataVietNamLanguage: dataVietNamLanguage,\r\n  changeVietNamLanguage: changeVietNamLanguage,\r\n  arrGif: arrGif,\r\n  Emoji: Emoji,\r\n  valueMessage: valueMessage\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore } from 'redux';\r\nimport myReducer from './reduces/index';\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(\r\n  myReducer,\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}