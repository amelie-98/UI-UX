{"version":3,"sources":["components/Modal/AddMember.js","const/actionTypes.js","components/ListRoom.js","actions/index.js","components/Switch/DayNight.js","components/Modal/SwitchLanguage.js","components/ContentRoom.js","components/InfoRoom.js","App.js","serviceWorker.js","reduces/dataRoom.js","reduces/currentRoom.js","reduces/showInfoRoom.js","reduces/changeTheme.js","reduces/dataVietNamLanguage.js","reduces/changeVietNamLanguage.js","reduces/arrGif.js","reduces/index.js","index.js"],"names":["connect","state","changeTheme","dataVietNamLanguage","changeVietNamLanguage","props","className","useState","modal","setModal","toggle","lightTheme","onClick","classNames","IconAddMemberLightTheme","Modal","isOpen","ModalHeader","AddMemberToThisRoom","ModalBody","dataRoom","dispatch","setCurrentRoom","data","type","actionTypes","actions","currentRoomMouseDown","setCurrentRoomMouseDown","currentRoomOnClick","setCurrentRoomOnClick","inputValue","setInputValue","ListRoomArr","_","filter","map","n","nameRoom","numberNotificationUnRead","includes","toLowerCase","ListRoomLightTheme","HeaderListRoomLightTheme","SearchCircleLightTheme","onChange","e","target","value","item","index","RoomSelected","RemoveHover","key","name","onMouseDown","IconAndNameRoomLightTheme","MoveToCenter","NotificationRead","setChangeTheme","id","for","setChangeVietNamLanguage","currentRoom","showInfoRoom","arrGif","setShowInfoRoom","wrapperRef","useRef","clickOnInput","setClickOnInput","showGif","setShowGif","clickOutSide","event","current","contains","document","removeEventListener","ContentRoomLightTheme","MdPeopleLightTheme","LightThisIcon","MdPeopleLightThemeLightThisIcon","MainRoomLightTheme","find","CustomContainerLightTheme","src","avatar","alt","NameTimeMessageLightTheme","time","message","FooterContentRoomLightTheme","ClickMessage","MessageLightTheme","ClickMessageMessageLightTheme","ClickIcon","FooterIconLightTheme","ClickIconFooterIconLightTheme","ref","addEventListener","ShowGif","Row","Col","sm","level","HideThisDiv","InfoRoomLightTheme","InfoRoom","BodyInfoRoomLightTheme","Admin","App","Boolean","window","location","hostname","match","initialState","myReducer","action","Member","combineReducers","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f097932.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { MdPersonAdd } from 'react-icons/md';\r\nimport './AddMember.css'\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddMember = (props) => {\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div className='Model-AddMember'>\r\n      <MdPersonAdd onClick={toggle}\r\n        className={classNames('Icon-AddMember', {\r\n          IconAddMemberLightTheme: lightTheme === true,\r\n        })}\r\n      />\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          {\r\n            props.changeVietNamLanguage ?\r\n              <p>Add Member To This Room</p>\r\n              :\r\n              <p>{props.dataVietNamLanguage.AddMemberToThisRoom}</p>\r\n          }\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(AddMember);","export default {\r\n  setCurrentRoom: 'SET_CURRENT_ROOM',\r\n  setShowInfoRoom: 'SET_SHOW_INFO_ROOM',\r\n  setChangeTheme: 'SET_CHANGE_THEME',\r\n  setChangeVietNamLanguage: 'SET_CHANGE_VIETNAM_LANGUAGE',\r\n};","import React, { useState } from 'react';\r\nimport './ListRoom.css';\r\nimport _ from 'lodash'\r\nimport { MdWork } from 'react-icons/md';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport { GiLargeDress, GiMusicalNotes } from 'react-icons/gi'\r\nimport classNames from 'classnames'\r\nimport AddMember from './Modal/AddMember'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nfunction ListRoom(props) {\r\n  const [currentRoomMouseDown, setCurrentRoomMouseDown] = useState('');\r\n  const [currentRoomOnClick, setCurrentRoomOnClick] = useState('');\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const onClickRoom = (name) => {\r\n    setCurrentRoomOnClick(name)\r\n    props.setCurrentRoom(name)\r\n  }\r\n  const searchRoom = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n  const ListRoomArr = _.filter(_.map(props.dataRoom, n => ({\r\n    nameRoom: n.nameRoom,\r\n    type: n.type,\r\n    numberNotificationUnRead: n.numberNotificationUnRead\r\n  })), n => (_.includes(n.nameRoom.toLowerCase(), inputValue.toLowerCase())))\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div\r\n      className={classNames('ListRoom', {\r\n        ListRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div\r\n        className={classNames('Header-ListRoom', {\r\n          HeaderListRoomLightTheme: lightTheme === true,\r\n        })}\r\n      >\r\n        <div className='Top-Header-ListRoom'>\r\n          <h4>ddtsoft</h4>\r\n        </div>\r\n        <div className='Bot-Header-ListRoom'>\r\n          <FaCircle className='Icon-Circle' />\r\n          <h6>Do Tung Duong</h6>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Body-ListRoom'>\r\n        <div className=\"wrapper\">\r\n          <div className=\"search-icon\">\r\n            <input\r\n              className={classNames('search-circle', {\r\n                SearchCircleLightTheme: lightTheme === true,\r\n              })}\r\n\r\n              type=\"text\" onChange={searchRoom} />\r\n            <div className=\"search-bar\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='Show-ListRoom'>\r\n          {\r\n            _.map(ListRoomArr, (item, index) =>\r\n              <div\r\n                className={classNames('Room', {\r\n                  RoomSelected: currentRoomOnClick === item.nameRoom,\r\n                  RemoveHover: currentRoomMouseDown === item.nameRoom\r\n                })}\r\n                key={index}\r\n                onClick={() => onClickRoom(item.nameRoom)}\r\n                onMouseDown={() => setCurrentRoomMouseDown(item.nameRoom)}\r\n              >\r\n                <div\r\n                  className={classNames('Icon-And-NameRoom', {\r\n                    IconAndNameRoomLightTheme: lightTheme === true,\r\n                  })}\r\n                >\r\n                  {\r\n                    item.type === 'Work' ?\r\n                      <MdWork className='Icon-Left' />\r\n                      :\r\n                      item.type === 'Shopping' ?\r\n                        <GiLargeDress className='Icon-Left' />\r\n                        :\r\n                        item.type === 'Party' ?\r\n                          <GiMusicalNotes />\r\n                          : null\r\n                  }\r\n                  <div className='NameRoom'>\r\n                    {item.nameRoom}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={classNames('AddMember-And-NotificationUnRead', {\r\n                    MoveToCenter: currentRoomOnClick === item.nameRoom,\r\n                  })}\r\n                >\r\n                  <AddMember />\r\n                  <div\r\n                    className={classNames('NotificationUnRead', {\r\n                      NotificationRead: currentRoomOnClick === item.nameRoom,\r\n                    })}\r\n                  >\r\n                    {item.numberNotificationUnRead}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurrentRoom: (data) => { dispatch(actions.setCurrentRoom(data)) },\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ListRoom);","import actionTypes from '../const/actionTypes';\r\n\r\nexport const setCurrentRoom = (data) => { return { type: actionTypes.setCurrentRoom, data: data } }\r\n\r\nexport const setShowInfoRoom = () => { return { type: actionTypes.setShowInfoRoom } }\r\n\r\nexport const setChangeTheme = () => { return { type: actionTypes.setChangeTheme } }\r\n\r\nexport const setChangeVietNamLanguage = () => { return { type: actionTypes.setChangeVietNamLanguage } }","import React from 'react';\r\nimport './DayNight.scss';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nfunction DayNight(props) {\r\n  const changeTheme = () => {\r\n    props.setChangeTheme();\r\n  }\r\n  return (\r\n    <div className=\"toggleWrapper\">\r\n      <input type=\"checkbox\" className=\"dn\" id=\"dn\" onChange={changeTheme} />\r\n      <label for=\"dn\" className=\"toggle\">\r\n        <span className=\"toggle__handler\">\r\n          <span className=\"crater crater--1\"></span>\r\n          <span className=\"crater crater--2\"></span>\r\n          <span className=\"crater crater--3\"></span>\r\n        </span>\r\n        <span className=\"star star--1\"></span>\r\n        <span className=\"star star--2\"></span>\r\n        <span className=\"star star--3\"></span>\r\n        <span className=\"star star--4\"></span>\r\n        <span className=\"star star--5\"></span>\r\n        <span className=\"star star--6\"></span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeTheme: () => { dispatch(actions.setChangeTheme()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(DayNight);","import React from 'react';\r\nimport './SwitchLanguage.css'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nconst SwitchLanguage = (props) => {\r\n  const letSwitchLanguage = () => {\r\n    props.setChangeVietNamLanguage();\r\n  }\r\n  return (\r\n    <div className='SwitchLanguage'>\r\n      <label className=\"rocker rocker-small\">\r\n        <input type=\"checkbox\" onClick={letSwitchLanguage} />\r\n        <span className=\"switch-left\">En</span>\r\n        <span className=\"switch-right\">Vi</span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeVietNamLanguage: () => { dispatch(actions.setChangeVietNamLanguage()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(SwitchLanguage);","import React, { useState, useRef } from 'react';\r\nimport './ContentRoom.css';\r\nimport { FaFolderPlus, FaRegSmileWink } from 'react-icons/fa';\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport { MdPeople, MdGif } from 'react-icons/md';\r\nimport * as actions from '../actions/index';\r\nimport DayNight from './Switch/DayNight'\r\nimport SwitchLanguage from './Modal/SwitchLanguage'\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nfunction ContentRoom(props) {\r\n  const wrapperRef = useRef(); //hook\r\n  const [clickOnInput, setClickOnInput] = useState(false);\r\n  const [showGif, setShowGif] = useState(false);\r\n  const clickOnThisInput = () => {\r\n    setClickOnInput(true);\r\n    document.addEventListener('click', clickOutSide)\r\n  }\r\n  const clickOutSide = (event) => {\r\n    const { target } = event;\r\n    if (!wrapperRef.current.contains(target)) {\r\n      setClickOnInput(false)\r\n      document.removeEventListener('click', clickOutSide)\r\n    }\r\n  }\r\n  const showInfoRoom = () => {\r\n    props.setShowInfoRoom();\r\n  }\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div\r\n      className={classNames('ContentRoom', {\r\n        ContentRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div className='Header-ContentRoom'>\r\n        <p># {props.currentRoom}</p>\r\n        <div className='Icon-Header-ContentRoom'>\r\n          <SwitchLanguage />\r\n          <div className='Switch-Day-Night'>\r\n            <DayNight />\r\n          </div>\r\n          <MdPeople\r\n            className={classNames('', {\r\n              MdPeopleLightTheme: lightTheme === true,\r\n              LightThisIcon: props.showInfoRoom === true,\r\n              MdPeopleLightThemeLightThisIcon: lightTheme === true && props.showInfoRoom === true\r\n            })}\r\n            onClick={showInfoRoom} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={classNames('main-room', {\r\n          MainRoomLightTheme: lightTheme === true\r\n        })}\r\n        id=\"scrollbar-style\">\r\n        {\r\n          _.map(_.find(props.dataRoom, { nameRoom: props.currentRoom }).data, (item, index) =>\r\n            <div className='Chat-Message' key={index} >\r\n              <div\r\n                className={classNames('Custom-Container', {\r\n                  CustomContainerLightTheme: lightTheme === true\r\n                })}\r\n              >\r\n                <img src={item.avatar} alt='Img-User' />\r\n                <div\r\n                  className={classNames('Name-Time-Message', {\r\n                    NameTimeMessageLightTheme: lightTheme === true\r\n                  })}\r\n                >\r\n                  <div className='Name-Time'>\r\n                    <p className='Name'>{item.name}</p>\r\n                    <p className='Time'>{item.time}</p>\r\n                  </div>\r\n                  <p className='Show-Message'>{item.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n\r\n      <div\r\n        className={classNames('Footer-ContentRoom', {\r\n          FooterContentRoomLightTheme: lightTheme === true\r\n        })}\r\n      >\r\n        <div\r\n          className={classNames('Message', {\r\n            ClickMessage: clickOnInput === true,\r\n            MessageLightTheme: lightTheme === true,\r\n            ClickMessageMessageLightTheme: clickOnInput === true && lightTheme === true\r\n          })}\r\n        >\r\n          <FaFolderPlus\r\n            className={classNames('Footer-Icon', {\r\n              ClickIcon: clickOnInput === true,\r\n              FooterIconLightTheme: lightTheme === true,\r\n              ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n            })}\r\n          />\r\n          <input className='Footer-Input'\r\n            ref={wrapperRef}\r\n            onClick={clickOnThisInput}\r\n          />\r\n          <div className='Footer-Icon-Right'>\r\n            <div\r\n              className={classNames('Footer-Icon Gif-Icon', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n            >\r\n            </div>\r\n            <MdGif\r\n              className={classNames('Footer-Icon Gif-Icon', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n              onClick={() => setShowGif(!showGif)}\r\n            />\r\n            <FaRegSmileWink\r\n              className={classNames('Footer-Icon', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classNames('test', {\r\n          ShowGif: showGif === true\r\n        })}\r\n        >\r\n          <Row>\r\n            {_.map(props.arrGif, (item, index) => (\r\n              <Col sm=\"3\" key={index}>\r\n                <img className='img-gif' src={item} alt='gif' />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    arrGif: state.arrGif\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setShowInfoRoom: () => { dispatch(actions.setShowInfoRoom()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ContentRoom);","import React from 'react';\r\nimport './InfoRoom.css';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport classNames from 'classnames'\r\n\r\nfunction InfoRoom(props) {\r\n  const ListRoomArr = _.map(_.find(props.dataRoom, { nameRoom: props.currentRoom }).data, (item) => ({\r\n    avatar: item.avatar,\r\n    name: item.name,\r\n    level: item.level\r\n  }))\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div\r\n      className={classNames('InfoRoom', {\r\n        HideThisDiv: props.showInfoRoom === false,\r\n        InfoRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div className='Header-InfoRoom'>\r\n        {\r\n          props.changeVietNamLanguage ?\r\n            <p>Info Room</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.InfoRoom}</p>\r\n        }\r\n      </div>\r\n      <div\r\n        className={classNames('Body-InfoRoom', {\r\n          BodyInfoRoomLightTheme: lightTheme === true,\r\n        })}\r\n        id=\"scrollbar\">\r\n\r\n        <div className='Admin'>\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Admin</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Admin}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n          <div className='User-InfoRoom'>\r\n            <div className='Avatar-InfoRoom'>\r\n              <img src={_.filter(ListRoomArr, { level: 'Admin' })[0].avatar} alt='Img-User' />\r\n            </div>\r\n            <div className='Name-User-InfoRoom'>\r\n              <p>{_.filter(ListRoomArr, { level: 'Admin' })[0].name}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='Admin'>\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Admin</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Admin}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n          <div className='Member'>\r\n            {_.map(ListRoomArr, (item, index) =>\r\n              <div className='User-InfoRoom' key={index}>\r\n                <div className='Avatar-InfoRoom'>\r\n                  <img src={item.avatar} alt='Img-User' />\r\n                </div>\r\n                <div className='Name-User-InfoRoom'>\r\n                  <p>{item.name}</p>\r\n                </div>\r\n              </div>)\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(InfoRoom);","import React from 'react';\nimport './App.css';\nimport ListRoom from './components/ListRoom'\nimport ContentRoom from './components/ContentRoom'\nimport InfoRoom from './components/InfoRoom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ListRoom />\n      <ContentRoom />\n      <InfoRoom />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = [\r\n  {\r\n    nameRoom: 'Work', type: 'Work', numberNotificationUnRead: '2', data: [\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Admin' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n    ],\r\n  },\r\n  {\r\n    nameRoom: 'Shopping', type: 'Shopping', numberNotificationUnRead: '4', data: [\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Admin' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n    ],\r\n  },\r\n  {\r\n    nameRoom: 'Party', type: 'Party', numberNotificationUnRead: '6', data: [\r\n      { avatar: 'https://i.imgur.com/YAE3htvb.jpg', name: 'Thirsty Girl ', time: 'Today at 1:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/Ks7LodGb.jpg', name: 'Tsunade', time: 'Today at 2:11 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/A1pbCLxb.jpg', name: 'Miku', time: 'Today at 3:45 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/89aYroeb.jpg', name: 'Motor Show Girl', time: 'Today at 12:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/ji8Y1Z9b.jpg', name: 'Ai UeHare', time: 'Today at 5:34 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/qOcNLpLb.jpg', name: 'Loli is to be loved', time: 'Today at 11:34 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/3eB7V4jb.jpg', name: 'Alice Senpai', time: 'Today at 7:56 AM', message: 'hello', level: 'Member' },\r\n      { avatar: 'https://i.imgur.com/hYQgQKQb.jpg', name: 'Cute Girl', time: 'Today at 9:34 AM', message: 'hello', level: 'Admin' },\r\n    ],\r\n  }\r\n]\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = 'Work';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setCurrentRoom:\r\n      return state = action.data\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setShowInfoRoom:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeTheme:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = {\r\n    InfoRoom:'Thông Tin Phòng',\r\n    Admin:'Người Quản Trị',\r\n    Member:'Thành Viên',\r\n    AddMemberToThisRoom:'Thêm Nhân Viên Vào Phòng Này'\r\n};\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeVietNamLanguage:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = [\r\n  'https://media.giphy.com/media/GAgLkuPIhozg4/giphy.gif',\r\n  'https://media.giphy.com/media/JRlqKEzTDKci5JPcaL/giphy.gif',\r\n  'https://media.giphy.com/media/3o7btXJQm5DD8ApubC/giphy.gif',\r\n  'https://media.giphy.com/media/3s0ddui7kadGg/giphy.gif',\r\n  'https://media.giphy.com/media/maINkm7zjcL4s/giphy.gif',\r\n  'https://media.giphy.com/media/TRdV7Bk5JVdVm/giphy.gif',\r\n  'https://media.giphy.com/media/8OTxSsEKzMs2A/giphy.gif',\r\n  'https://media.giphy.com/media/ptHRd4Rpeb11m/giphy.gif',\r\n  'https://media.giphy.com/media/jw99U8P9W4yOY/giphy.gif',\r\n  'https://media.giphy.com/media/kiOGNdQMj04SI/giphy.gif',\r\n  'https://media.giphy.com/media/U6IQE5XjiF5hm/giphy.gif',\r\n  'https://media.giphy.com/media/2y98KScHKeaQM/giphy.gif',\r\n  'https://media.giphy.com/media/H5AMoAO4JLPEI/giphy.gif',\r\n  'https://media.giphy.com/media/YHx48QSvcEFlC/giphy.gif',\r\n  'https://media.giphy.com/media/MlTMwvO9ZiWwU/giphy.gif',\r\n  'https://media.giphy.com/media/ZpRlGlevx07Mk/giphy.gif',\r\n  'https://media.giphy.com/media/12pwt3qlbVVBfy/giphy.gif',\r\n  'https://media.giphy.com/media/8Lc5xmvzRhlLy/giphy.gif',\r\n  'https://media.giphy.com/media/pIcez8CpT4ali/giphy.gif',\r\n  'https://media.giphy.com/media/DoHRW685Y1gru/giphy.gif',\r\n  'https://media.giphy.com/media/10Q2IMOHo3taQU/giphy.gif',\r\n  'https://media.giphy.com/media/4NuAILyDbmD16/giphy.gif',\r\n  'https://media.giphy.com/media/t5Ml3rCGNEddm/giphy.gif',\r\n  'https://media.giphy.com/media/RneIcLEosVuta/giphy.gif',\r\n  'https://media.giphy.com/media/F6132ctb9YARa/giphy.gif',\r\n  'https://media.giphy.com/media/Yv6RcuiyHYmn6/giphy.gif',\r\n  'https://media.giphy.com/media/lmFm5QZMzdmQ8/giphy.gif',\r\n  'https://media.giphy.com/media/13Q1xpydjvb8qs/giphy.gif',\r\n];\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\n\r\nimport dataRoom from './dataRoom'\r\nimport currentRoom from './currentRoom'\r\nimport showInfoRoom from './showInfoRoom'\r\nimport changeTheme from './changeTheme'\r\nimport dataVietNamLanguage from './dataVietNamLanguage'\r\nimport changeVietNamLanguage from './changeVietNamLanguage'\r\nimport arrGif from './arrGif'\r\n\r\nconst myReducer = combineReducers({\r\n  dataRoom: dataRoom,\r\n  currentRoom: currentRoom,\r\n  showInfoRoom: showInfoRoom,\r\n  changeTheme: changeTheme,\r\n  dataVietNamLanguage: dataVietNamLanguage,\r\n  changeVietNamLanguage: changeVietNamLanguage,\r\n  arrGif: arrGif\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore } from 'redux';\r\nimport myReducer from './reduces/index';\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(\r\n  myReducer,\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}