{"version":3,"sources":["serviceWorker.js","const/actionTypes.js","reduces/dataRoom.js","reduces/currentRoom.js","reduces/showInfoRoom.js","reduces/changeTheme.js","reduces/dataVietNamLanguage.js","reduces/changeVietNamLanguage.js","reduces/arrGif.js","reduces/Emoji.js","reduces/valueMessage.js","reduces/listRoom.js","reduces/currentUser.js","reduces/allowLogin.js","reduces/statusLogin.js","reduces/statusRegister.js","reduces/index.js","components/Api/apiCaller.js","actions/index.js","components/Login/Login.js","components/Modal/AddMember.js","components/ListRoom.js","components/Switch/DayNight.js","components/Modal/SwitchLanguage.js","components/Popovers/Icon.js","components/Popovers/PieChart.js","components/ContentRoom.js","components/Collapse/IntroRoom.js","components/InfoRoom.js","App.js","Boss.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","myReducer","state","action","type","actionTypes","data","attributes","name","dataRoom","_","map","n","id","parseInt","nameRoom","numberNotificationUnRead","unread","Intro","description","InfoRoom","Admin","Member","AddMemberToThisRoom","CurrentNumberOfPeopleInTheRoom","OnlinePeople","combineReducers","currentRoom","showInfoRoom","changeTheme","dataVietNamLanguage","changeVietNamLanguage","arrGif","Emoji","valueMessage","listRoom","currentUser","allowLogin","statusLogin","statusRegister","request_infused_by_data","url","method","body","axios","setStatusRegister","setStatusLogin","setAllowLogin","setDataRoom","setCurrentUser","connect","dispatch","login","userName","passWord","checkRememberMe","obj","user","email","password","remember_me","apiCaller","then","res","catch","error","console","log","response","errors","actions","register","mail","pass","repeatPass","password_confirmation","props","history","useHistory","push","userNameLogin","useRef","passWordLogin","userNameRegister","emailRegister","passWordRegister","repeatPassWordRegister","length","alert","join","className","defaultChecked","htmlFor","ref","data-type","value","onClick","current","checked","href","useState","modal","setModal","toggle","lightTheme","classNames","IconAddMemberLightTheme","Modal","isOpen","ModalHeader","ModalBody","SearchCircleLightTheme","setCurrentRoom","currentRoomMouseDown","setCurrentRoomMouseDown","currentRoomOnClick","setCurrentRoomOnClick","inputValue","setInputValue","ListRoomArr","filter","includes","toLowerCase","ListRoomLightTheme","HeaderListRoomLightTheme","goBack","onChange","e","target","item","index","RoomSelected","RemoveHover","key","onMouseDown","IconAndNameRoomLightTheme","MoveToCenter","NotificationRead","HideNotificationRead","setChangeTheme","for","setChangeVietNamLanguage","UncontrolledPopover","trigger","placement","hideArrow","PopoverBody","PopoverBodyLightTheme","Row","Array","from","Col","sm","addEmoji","chooseEmoji","colorScale","PopoverHeader","HeaderChartBodyLightTheme","PieChartBodyLightTheme","innerRadius","labels","x","y","uniqBy","find","style","background","StateNumberBodyLightTheme","setShowInfoRoom","setSendMessage","message","setValueMessage","setSendGif","gif","joinRoom","isJoinRoom","messagesCable","messages","setMessages","cable","ActionCable","createConsumer","authToken","channel","subscriptions","create","connected","getInitialMessages","received","mapIdDataToInt","relationships","room","included","dataMessages","perform","total_messages","tooltipOpen","setTooltipOpen","wrapperRef","mainRoomRef","clickOnInput","setClickOnInput","showGif","setShowGif","clickOutSide","event","contains","document","removeEventListener","useEffect","addEventListener","sendMessage","unsubscribe","keyCode","shiftKey","trim","scrollTop","scrollHeight","ContentRoomLightTheme","MaxWidth","MdPeopleLightTheme","LightThisIcon","MdPeopleLightThemeLightThisIcon","MainRoomLightTheme","CustomContainerLightTheme","src","avatar","alt","Tooltip","NameTimeMessageLightTheme","time","undefined","dangerouslySetInnerHTML","__html","toBr","marked","FooterContentRoomLightTheme","ClickMessage","MessageLightTheme","ClickMessageMessageLightTheme","ClickIcon","FooterIconLightTheme","ClickIconFooterIconLightTheme","testLightTheme","ShowGif","breakpointCols","columnClassName","nextTick","letShowGif","setIsOpen","Collapse","Card","CardBody","BodyIntroRoomLightTheme","ahihiRef","testRef","indexDiv","setIndexDiv","divStyle","setdivStyle","level","showInfoDiv","innerHeight","offsetTop","position","top","HideThisDiv","InfoRoomLightTheme","BodyInfoRoomLightTheme","addZindexCss","levelAdminLightTheme","levelMemberLightTheme","getApi","config","headers","get","BackGroundIMG","Boss","exact","path","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a819af36.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n  setCurrentRoom: 'SET_CURRENT_ROOM',\r\n  setShowInfoRoom: 'SET_SHOW_INFO_ROOM',\r\n  setChangeTheme: 'SET_CHANGE_THEME',\r\n  setChangeVietNamLanguage: 'SET_CHANGE_VIETNAM_LANGUAGE',\r\n  setSendMessage: 'SET_SEND_MESSAGE',\r\n  setValueMessage: 'SET_VALUE_MESSAGE',\r\n  setSendGif: 'SET_SEND_GIF',\r\n  getListRoom: 'GET_LIST_ROOM',\r\n  setCurrentUser: 'SET_CURRENT_USER',\r\n  setDataRoom: 'SET_DATA_ROOM',\r\n  setAllowLogin: 'SET_ALLOW_LOGIN',\r\n  setStatusLogin: 'SET_STATUS_LOGIN',\r\n  setStatusRegister: 'SET_STATUS_REGISTER',\r\n};","import actionTypes from '../const/actionTypes';\r\nimport _ from 'lodash'\r\n\r\nvar initialState = []\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.setSendMessage:\r\n      // state[_.findIndex(state, { id: action.data.nameRoom })].data.push({ avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', message: action.data.message, level: 'Member' });\r\n      return state;\r\n\r\n    case actionTypes.setSendGif:\r\n      // state[_.findIndex(state, { id: action.data.nameRoom })].data.push({ avatar: 'https://i.imgur.com/VjnUSxab.jpg', name: 'Hinataaaaaaa', time: 'Today at 4:45 PM', gif: action.data.gif, level: 'Member' });\r\n      return state;\r\n\r\n    case actionTypes.setDataRoom:\r\n      action.data[0].attributes.name = 'Work'\r\n      const dataRoom = _.map(action.data, (n) => (\r\n        {\r\n          id: parseInt(n.id),\r\n          nameRoom: n.attributes.name,\r\n          type: 'Work',\r\n          numberNotificationUnRead: n.attributes.unread,\r\n          Intro: n.attributes.description,\r\n        }\r\n      ))\r\n      return dataRoom;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = -1;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setCurrentRoom:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setShowInfoRoom:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = true;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeTheme:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = {\r\n  InfoRoom: 'Thông Tin Phòng',\r\n  Admin: 'Người Quản Trị',\r\n  Member: 'Thành Viên',\r\n  AddMemberToThisRoom: 'Thêm Nhân Viên Vào Phòng Này',\r\n  CurrentNumberOfPeopleInTheRoom: 'Số Người Hiện Tại Trong Phòng',\r\n  OnlinePeople: 'Số Người Trực Tuyến'\r\n};\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setChangeVietNamLanguage:\r\n      return state = !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = [\r\n  'https://media.giphy.com/media/GAgLkuPIhozg4/giphy.gif',\r\n  'https://media.giphy.com/media/JRlqKEzTDKci5JPcaL/giphy.gif',\r\n  'https://media.giphy.com/media/3o7btXJQm5DD8ApubC/giphy.gif',\r\n  'https://media.giphy.com/media/3s0ddui7kadGg/giphy.gif',\r\n  'https://media.giphy.com/media/maINkm7zjcL4s/giphy.gif',\r\n  'https://media.giphy.com/media/TRdV7Bk5JVdVm/giphy.gif',\r\n  'https://media.giphy.com/media/8OTxSsEKzMs2A/giphy.gif',\r\n  'https://media.giphy.com/media/ptHRd4Rpeb11m/giphy.gif',\r\n  'https://media.giphy.com/media/jw99U8P9W4yOY/giphy.gif',\r\n  'https://media.giphy.com/media/kiOGNdQMj04SI/giphy.gif',\r\n  'https://media.giphy.com/media/U6IQE5XjiF5hm/giphy.gif',\r\n  'https://media.giphy.com/media/2y98KScHKeaQM/giphy.gif',\r\n  'https://media.giphy.com/media/H5AMoAO4JLPEI/giphy.gif',\r\n  'https://media.giphy.com/media/YHx48QSvcEFlC/giphy.gif',\r\n  'https://media.giphy.com/media/MlTMwvO9ZiWwU/giphy.gif',\r\n  'https://media.giphy.com/media/ZpRlGlevx07Mk/giphy.gif',\r\n  'https://media.giphy.com/media/12pwt3qlbVVBfy/giphy.gif',\r\n  'https://media.giphy.com/media/8Lc5xmvzRhlLy/giphy.gif',\r\n  'https://media.giphy.com/media/pIcez8CpT4ali/giphy.gif',\r\n  'https://media.giphy.com/media/DoHRW685Y1gru/giphy.gif',\r\n  'https://media.giphy.com/media/10Q2IMOHo3taQU/giphy.gif',\r\n  'https://media.giphy.com/media/4NuAILyDbmD16/giphy.gif',\r\n  'https://media.giphy.com/media/t5Ml3rCGNEddm/giphy.gif',\r\n  'https://media.giphy.com/media/RneIcLEosVuta/giphy.gif',\r\n  'https://media.giphy.com/media/F6132ctb9YARa/giphy.gif',\r\n  'https://media.giphy.com/media/Yv6RcuiyHYmn6/giphy.gif',\r\n  'https://media.giphy.com/media/lmFm5QZMzdmQ8/giphy.gif',\r\n  'https://media.giphy.com/media/13Q1xpydjvb8qs/giphy.gif',\r\n];\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","// import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = '😀😃😄😁😆😂🤣😊😇🙂🙃😉😌😍🥰😘😗😙😚😋😛😝😜🤪🤨🧐🤓😎🤩🥳😏😒😞😫😩🥺😢😭😤😠😡🤬🤯🐶🐱🐭🐹🐰🦊🐻🐼🐨🐯🦁🐮🐮🐷🐽🐸🐵🙈🙉🙊🐒🐔🐧🐦🐤🐣🐥🐙🦕🦎🐍🐢🐌🐝🌑🌘🌘🌗🌗⚽🏀🏈⚾🥎🎾🏐🏉🥏🎱🏓🏸🏒🏑🥍🏏🥅⛳';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = '';\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setValueMessage:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n// import _ from 'lodash'\r\n\r\nvar initialState = []\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.getListRoom:\r\n      return action.data.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = {};\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setCurrentUser:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = false;\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setAllowLogin:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = [];\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setStatusLogin:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import actionTypes from '../const/actionTypes';\r\n\r\nvar initialState = [];\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case actionTypes.setStatusRegister:\r\n      return state = action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\n\r\nimport dataRoom from './dataRoom'\r\nimport currentRoom from './currentRoom'\r\nimport showInfoRoom from './showInfoRoom'\r\nimport changeTheme from './changeTheme'\r\nimport dataVietNamLanguage from './dataVietNamLanguage'\r\nimport changeVietNamLanguage from './changeVietNamLanguage'\r\nimport arrGif from './arrGif'\r\nimport Emoji from './Emoji'\r\nimport valueMessage from './valueMessage'\r\nimport listRoom from './listRoom'\r\nimport currentUser from './currentUser'\r\nimport allowLogin from './allowLogin'\r\nimport statusLogin from './statusLogin'\r\nimport statusRegister from './statusRegister'\r\n\r\nconst myReducer = combineReducers({\r\n  dataRoom: dataRoom,\r\n  currentRoom: currentRoom,\r\n  showInfoRoom: showInfoRoom,\r\n  changeTheme: changeTheme,\r\n  dataVietNamLanguage: dataVietNamLanguage,\r\n  changeVietNamLanguage: changeVietNamLanguage,\r\n  arrGif: arrGif,\r\n  Emoji: Emoji,\r\n  valueMessage: valueMessage,\r\n  listRoom: listRoom,\r\n  currentUser: currentUser,\r\n  allowLogin: allowLogin,\r\n  statusLogin: statusLogin,\r\n  statusRegister: statusRegister\r\n});\r\n\r\nexport default myReducer;","import axios from 'axios'\r\n\r\nexport function request_infused_by_data(url, method, body) {\r\n  return axios({\r\n    method: method,\r\n    url: url,\r\n    data: body\r\n  })\r\n};\r\n\r\nexport function request_infused_by_params(url, method = 'GET', body) {\r\n  return axios({\r\n    method: method,\r\n    url: url,\r\n    params: body\r\n  })\r\n};","import actionTypes from '../const/actionTypes';\r\nimport * as apiCaller from '../components/Api/apiCaller'\r\nimport axios from 'axios'\r\n\r\nexport const getApi = (data) => {\r\n  var config = {\r\n    headers: { 'Authorization': \"Bearer \" + data.attributes.authToken }\r\n  };\r\n  return (dispatch) => {\r\n    axios.get(\r\n      'http://192.168.1.189:3000/api/joined_rooms',\r\n      config\r\n    ).then((res) => {\r\n      dispatch(setDataRoom(res.data.data))\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    });\r\n  }\r\n}\r\n\r\nexport const login = (data) => {\r\n  const obj = {\r\n    user: {\r\n      email: data.userName,\r\n      password: data.passWord,\r\n      remember_me: data.checkRememberMe\r\n    }\r\n  }\r\n  return (dispatch) => {\r\n    apiCaller.request_infused_by_data('http://192.168.1.189:3000/api/login', 'post', obj)\r\n      .then(res => {\r\n        dispatch(setCurrentUser(res.data.data))\r\n      })\r\n      .then(res => {\r\n        dispatch(setAllowLogin(true))\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data.errors)\r\n        dispatch(setAllowLogin(false))\r\n        dispatch(setStatusLogin(error.response.data.errors))\r\n      });\r\n  }\r\n}\r\n\r\nexport const register = (data) => {\r\n  const obj = {\r\n    user: {\r\n      name: data.name,\r\n      email: data.mail,\r\n      password: data.pass,\r\n      password_confirmation: data.repeatPass\r\n    }\r\n  };\r\n  return (dispatch) => {\r\n    apiCaller.request_infused_by_data('http://192.168.1.189:3000/api/signup', 'post', obj)\r\n      .catch(error => {\r\n        console.log(error.response.data)\r\n        dispatch(setStatusRegister(error.response.data.errors))\r\n      });\r\n  }\r\n}\r\n\r\nexport const setStatusRegister = (data) => { return { type: actionTypes.setStatusRegister, data: data } }\r\n\r\nexport const setStatusLogin = (data) => { return { type: actionTypes.setStatusLogin, data: data } }\r\n\r\nexport const setAllowLogin = (data) => { return { type: actionTypes.setAllowLogin, data: data } }\r\n\r\nexport const setDataRoom = (data) => { return { type: actionTypes.setDataRoom, data: data } }\r\n\r\nexport const setCurrentUser = (data) => { return { type: actionTypes.setCurrentUser, data: data } }\r\n\r\nexport const getListRoom = (data) => { return { type: actionTypes.getListRoom, data: data } }\r\n\r\nexport const setCurrentRoom = (data) => { return { type: actionTypes.setCurrentRoom, data: data } }\r\n\r\nexport const setShowInfoRoom = () => { return { type: actionTypes.setShowInfoRoom } }\r\n\r\nexport const setChangeTheme = () => { return { type: actionTypes.setChangeTheme } }\r\n\r\nexport const setChangeVietNamLanguage = () => { return { type: actionTypes.setChangeVietNamLanguage } }\r\n\r\nexport const setSendMessage = (data) => { return { type: actionTypes.setSendMessage, data: data } }\r\n\r\nexport const setValueMessage = (data) => { return { type: actionTypes.setValueMessage, data: data } }\r\n\r\nexport const setSendGif = (data) => { return { type: actionTypes.setSendGif, data: data } }","import React, { useRef } from 'react'\r\nimport './Login.css'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nfunction Login(props) {\r\n  let history = useHistory();\r\n  function handleClick() {\r\n    props.login(userNameLogin.current.value, passWordLogin.current.value, checkRememberMe.current.checked)\r\n  }\r\n  if (props.allowLogin === true) {\r\n    props.setAllowLogin()\r\n    history.push('/App')\r\n  }\r\n  const letRegister = () => {\r\n    props.register(userNameRegister.current.value, emailRegister.current.value, passWordRegister.current.value, repeatPassWordRegister.current.value)\r\n  }\r\n  //login\r\n  const userNameLogin = useRef();\r\n  const passWordLogin = useRef();\r\n  const checkRememberMe = useRef();\r\n  //register\r\n  const userNameRegister = useRef();\r\n  const emailRegister = useRef();\r\n  const passWordRegister = useRef();\r\n  const repeatPassWordRegister = useRef();\r\n  // error login\r\n  if (props.statusLogin.length !== 0) {\r\n    alert(props.statusLogin.join('\\n'))\r\n    props.setStatusLogin()\r\n  }\r\n  // error register\r\n  if (props.statusRegister.length !== 0) {\r\n    alert(props.statusRegister.join('\\n'))\r\n    props.setStatusRegister()\r\n  }\r\n  return (\r\n    <div className='Login' >\r\n      <div className=\"login-wrap\">\r\n        <div className=\"login-html\">\r\n          <input id=\"tab-1\" type=\"radio\" name=\"tab\" className=\"sign-in height\" defaultChecked /><label htmlFor=\"tab-1\" className=\"tab\">Sign In</label>\r\n          <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"sign-up height\" /><label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\r\n          <div className=\"login-form\">\r\n            <div className=\"sign-in-htm\">\r\n              <div className=\"group\">\r\n                <label htmlFor=\"user\" className=\"label\" >Username</label>\r\n                <input id=\"user\" type=\"text\" className=\"input height\" ref={userNameLogin} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\" >Password</label>\r\n                <input id=\"pass\" type=\"password\" className=\"input height\" data-type=\"password\" ref={passWordLogin} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input id=\"check\" type=\"checkbox\" className=\"check height\" defaultChecked ref={checkRememberMe} />\r\n                <label htmlFor=\"check\"><span className=\"icon\" /> Keep me Signed in</label>\r\n              </div>\r\n              <div className=\"group\">\r\n                <input type=\"submit\" className=\"button height\" value=\"SIGN IN\" onClick={handleClick} />\r\n              </div>\r\n              <div className=\"hr\" />\r\n              <div className=\"foot-lnk\">\r\n                <a href=\"#forgot\">Forgot Password?</a>\r\n              </div>\r\n            </div>\r\n            <div className=\"sign-up-htm\">\r\n              <div className=\"group\">\r\n                <label htmlFor=\"user\" className=\"label\">Username</label>\r\n                <input id=\"user\" type=\"text\" className=\"input height\" ref={userNameRegister} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\">Email Address</label>\r\n                <input id=\"pass\" type=\"text\" className=\"input height\" ref={emailRegister} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\">Password</label>\r\n                <input id=\"pass\" type=\"password\" className=\"input height\" data-type=\"password\" ref={passWordRegister} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"pass\" className=\"label\">Repeat Password</label>\r\n                <input id=\"pass\" type=\"password\" className=\"input height\" data-type=\"password\" ref={repeatPassWordRegister} />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input type=\"submit\" className=\"button height\" value=\"SIGN UP\" onClick={letRegister} />\r\n              </div>\r\n              <div className=\"hr\" />\r\n              <div className=\"foot-lnk\">\r\n                <label htmlFor=\"tab-1\">Already Member?\r\n              </label></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    allowLogin: state.allowLogin,\r\n    statusLogin: state.statusLogin,\r\n    statusRegister: state.statusRegister\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (userName, passWord, checkRememberMe) => { dispatch(actions.login({ userName: userName, passWord: passWord, checkRememberMe: checkRememberMe })) },\r\n    setAllowLogin: () => { dispatch(actions.setAllowLogin(false)) },\r\n    register: (name, mail, pass, repeatPass) => { dispatch(actions.register({ name: name, mail: mail, pass: pass, repeatPass: repeatPass })) },\r\n    setStatusLogin: () => { dispatch(actions.setStatusLogin([])) },\r\n    setStatusRegister: () => { dispatch(actions.setStatusRegister([])) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Login);","import React, { useState } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { MdPersonAdd } from 'react-icons/md';\r\nimport './AddMember.css'\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddMember = (props) => {\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div className='Model-AddMember'>\r\n      <MdPersonAdd onClick={toggle}\r\n        className={classNames('Icon-AddMember', {\r\n          IconAddMemberLightTheme: lightTheme === true,\r\n        })}\r\n      />\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          {\r\n            props.changeVietNamLanguage ?\r\n              <p>Add Member To This Room</p>\r\n              :\r\n              <p>{props.dataVietNamLanguage.AddMemberToThisRoom}</p>\r\n          }\r\n        </ModalHeader>\r\n        <ModalBody className='ModalBody'>\r\n          {/* css kính lúp để ở file ListRoom.css */}\r\n          <div className=\"wrapper\">\r\n            <div className=\"search-icon\">\r\n              <input\r\n                className={classNames('search-circle', {\r\n                  SearchCircleLightTheme: lightTheme === true,\r\n                })}\r\n                type=\"text\" />\r\n              <div className=\"search-bar\" />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(AddMember);","import React, { useState } from 'react';\r\nimport './ListRoom.css';\r\nimport _ from 'lodash'\r\nimport { MdWork } from 'react-icons/md';\r\nimport { FaCircle } from 'react-icons/fa';\r\nimport { GiLargeDress, GiMusicalNotes } from 'react-icons/gi'\r\nimport classNames from 'classnames'\r\nimport AddMember from './Modal/AddMember'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ListRoom(props) {\r\n  let history = useHistory();\r\n  const [currentRoomMouseDown, setCurrentRoomMouseDown] = useState(-1);\r\n  const [currentRoomOnClick, setCurrentRoomOnClick] = useState(-1);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const onClickRoom = (id) => {\r\n    setCurrentRoomOnClick(id)\r\n    props.setCurrentRoom(id)\r\n  }\r\n  const searchRoom = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n  const ListRoomArr = _.filter(_.map(props.dataRoom, n => ({\r\n    nameRoom: n.nameRoom,\r\n    type: n.type,\r\n    numberNotificationUnRead: n.numberNotificationUnRead,\r\n    id: n.id\r\n  })), n => (_.includes(n.nameRoom.toLowerCase(), inputValue.toLowerCase())))\r\n  const lightTheme = props.changeTheme;\r\n  const logOut = () => {\r\n    history.goBack();\r\n    props.setCurrentRoom(-1)\r\n  }\r\n  return (\r\n    <div\r\n      className={classNames('ListRoom', {\r\n        ListRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div\r\n        className={classNames('Header-ListRoom', {\r\n          HeaderListRoomLightTheme: lightTheme === true,\r\n        })}\r\n      >\r\n        <div>\r\n          <div className='Top-Header-ListRoom'>\r\n            <h4>ddtsoft</h4>\r\n          </div>\r\n          <div className='Bot-Header-ListRoom'>\r\n            <FaCircle className='Icon-Circle' />\r\n            <h6>{props.currentUser.attributes.name}</h6>\r\n          </div>\r\n        </div>\r\n        <div className='LogOut' onClick={logOut} >\r\n          Log-Out\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Body-ListRoom'>\r\n        <div className=\"wrapper\">\r\n          <div className=\"search-icon\">\r\n            <input\r\n              className={classNames('search-circle', {\r\n                SearchCircleLightTheme: lightTheme === true,\r\n              })}\r\n\r\n              type=\"text\" onChange={searchRoom} />\r\n            <div className=\"search-bar\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='Show-ListRoom'>\r\n          {\r\n            _.map(ListRoomArr, (item, index) =>\r\n              <div\r\n                className={classNames('Room', {\r\n                  RoomSelected: currentRoomOnClick === item.id,\r\n                  RemoveHover: currentRoomMouseDown === item.id\r\n                })}\r\n                key={index}\r\n                onClick={() => onClickRoom(item.id)}\r\n                onMouseDown={() => setCurrentRoomMouseDown(item.id)}\r\n              >\r\n                <div\r\n                  className={classNames('Icon-And-NameRoom', {\r\n                    IconAndNameRoomLightTheme: lightTheme === true,\r\n                  })}\r\n                >\r\n                  {\r\n                    item.type === 'Work' ?\r\n                      <MdWork className='Icon-Left' />\r\n                      :\r\n                      item.type === 'Shopping' ?\r\n                        <GiLargeDress className='Icon-Left' />\r\n                        :\r\n                        item.type === 'Party' ?\r\n                          <GiMusicalNotes />\r\n                          : null\r\n                  }\r\n                  <div className='NameRoom'>\r\n                    {item.nameRoom}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={classNames('AddMember-And-NotificationUnRead', {\r\n                    MoveToCenter: currentRoomOnClick === item.id || item.numberNotificationUnRead === 0,\r\n                  })}\r\n                >\r\n                  <AddMember />\r\n                  <div\r\n                    className={classNames('NotificationUnRead', {\r\n                      NotificationRead: currentRoomOnClick === item.id,\r\n                      HideNotificationRead: item.numberNotificationUnRead === 0\r\n                    })}\r\n                  >\r\n                    {\r\n                      item.numberNotificationUnRead\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme,\r\n    listRoom: state.listRoom,\r\n    currentRoom: state.currentRoom,\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurrentRoom: (data) => { dispatch(actions.setCurrentRoom(data)) },\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ListRoom);","import React from 'react';\r\nimport './DayNight.scss';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nfunction DayNight(props) {\r\n  const changeTheme = () => {\r\n    props.setChangeTheme();\r\n  }\r\n  return (\r\n    <div className=\"toggleWrapper\">\r\n      <input type=\"checkbox\" className=\"dn\" id=\"dn\" onChange={changeTheme} />\r\n      <label for=\"dn\" className=\"toggle\">\r\n        <span className=\"toggle__handler\">\r\n          <span className=\"crater crater--1\"></span>\r\n          <span className=\"crater crater--2\"></span>\r\n          <span className=\"crater crater--3\"></span>\r\n        </span>\r\n        <span className=\"star star--1\"></span>\r\n        <span className=\"star star--2\"></span>\r\n        <span className=\"star star--3\"></span>\r\n        <span className=\"star star--4\"></span>\r\n        <span className=\"star star--5\"></span>\r\n        <span className=\"star star--6\"></span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeTheme: () => { dispatch(actions.setChangeTheme()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(DayNight);","import React from 'react';\r\nimport './SwitchLanguage.css'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/index';\r\n\r\nconst SwitchLanguage = (props) => {\r\n  const letSwitchLanguage = () => {\r\n    props.setChangeVietNamLanguage();\r\n  }\r\n  return (\r\n    <div className='SwitchLanguage'>\r\n      <label className=\"rocker rocker-small\">\r\n        <input type=\"checkbox\" onClick={letSwitchLanguage} />\r\n        <span className=\"switch-left\">En</span>\r\n        <span className=\"switch-right\">Vi</span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setChangeVietNamLanguage: () => { dispatch(actions.setChangeVietNamLanguage()) },\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(SwitchLanguage);","import React from 'react';\r\nimport { PopoverBody, Row, Col, UncontrolledPopover } from 'reactstrap';\r\nimport { FaRegSmileWink } from 'react-icons/fa';\r\nimport './Icon.css'\r\nimport _ from 'lodash'\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames'\r\n\r\nconst Emoji = (props) => {\r\n  const chooseEmoji = (item) => {\r\n    props.addEmoji(item);\r\n  }\r\n  return (\r\n    <div className='IconPopover'>\r\n      <div id=\"PopoverLegacy1\" >\r\n        <FaRegSmileWink />\r\n      </div>\r\n      <UncontrolledPopover className='All-Popover' trigger=\"legacy\" placement=\"top-end\" target=\"PopoverLegacy1\" hideArrow={true} >\r\n        <PopoverBody id='scroll-body-icon'\r\n          className={classNames('PopoverBody', {\r\n            PopoverBodyLightTheme: props.changeTheme === true,\r\n          })}\r\n        >\r\n          <Row>\r\n            {\r\n              _.map(Array.from(props.Emoji), (item, index) =>\r\n                <Col sm=\"2\" key={index}>\r\n                  <p className='p-icon'\r\n                    onClick={() => chooseEmoji(item)}\r\n                  >\r\n                    {item}\r\n                  </p>\r\n                </Col>\r\n              )\r\n            }\r\n          </Row>\r\n        </PopoverBody>\r\n      </UncontrolledPopover>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    Emoji: state.Emoji,\r\n    changeTheme: state.changeTheme,\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Emoji);","import React from 'react';\r\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { FaRegChartBar } from 'react-icons/fa';\r\nimport './PieChart.css'\r\nimport { VictoryPie } from 'victory'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames'\r\n\r\nconst PieChart = (props) => {\r\n  const lightTheme = props.changeTheme;\r\n  let colorScale = [\"cyan\", \"navy\"];\r\n  if (lightTheme === false) {\r\n    colorScale = [\"green\", \"red\"];\r\n  }\r\n  return (\r\n    <div className='PieChart'>\r\n      <FaRegChartBar id=\"PopoverLegacy\" />\r\n      <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"PopoverLegacy\">\r\n        <PopoverHeader\r\n          className={classNames('Header-Chart', {\r\n            HeaderChartBodyLightTheme: lightTheme === false\r\n          })}\r\n        >\r\n          Chart\r\n        </PopoverHeader>\r\n        <PopoverBody>\r\n          {\r\n            props.currentRoom !== -1 ?\r\n              <div\r\n                className={classNames('PieChart-Body', {\r\n                  PieChartBodyLightTheme: lightTheme === false\r\n                })}>\r\n                <VictoryPie\r\n                  colorScale={colorScale}\r\n                  innerRadius={100}\r\n                  labels={() => { }} // ẩn đi label\r\n                  data={[\r\n                    { x: \"Online\", y: 1 },\r\n                    { x: \"Offline\", y: _.uniqBy(_.find(props.dataRoom, { id: props.currentRoom }).data, 'name').length - 1 }\r\n                  ]}\r\n                />\r\n                <div className='Info-Chart'>\r\n                  <div className='Online'>\r\n                    <div style={{ background: colorScale[0] }} className='circle-div' />\r\n                    <div\r\n                      className={classNames('state-number', {\r\n                        StateNumberBodyLightTheme: lightTheme === false\r\n                      })}\r\n                    >\r\n                      <p>Online:</p>\r\n                      <p>1</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='Offline'>\r\n                    <div style={{ background: colorScale[1] }} className='circle-div' />\r\n                    <div\r\n                      className={classNames('state-number', {\r\n                        StateNumberBodyLightTheme: lightTheme === false\r\n                      })}\r\n                    >\r\n                      <p>Offline:</p>\r\n                      <p>{_.uniqBy(_.find(props.dataRoom, { id: props.currentRoom }).data, 'name').length - 1}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              :\r\n              null\r\n          }\r\n        </PopoverBody>\r\n      </UncontrolledPopover>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    changeTheme: state.changeTheme\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(PieChart);","import React, { useState, useRef, useEffect } from 'react';\r\nimport './ContentRoom.css';\r\nimport { FaFolderPlus } from 'react-icons/fa';\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport { MdPeople, MdGif } from 'react-icons/md';\r\nimport * as actions from '../actions/index';\r\nimport DayNight from './Switch/DayNight'\r\nimport SwitchLanguage from './Modal/SwitchLanguage'\r\nimport IconPopover from './Popovers/Icon'\r\nimport { nextTick } from 'q';\r\nimport Masonry from 'react-masonry-css'\r\nimport marked from 'marked';\r\nimport toBr from 'newline-to-br';\r\nimport PieChart from './Popovers/PieChart'\r\nimport { Tooltip } from 'reactstrap';\r\nimport ActionCable from 'actioncable';\r\n\r\nfunction ContentRoom(props) {\r\n  const [joinRoom, isJoinRoom] = useState(false);\r\n  // action cable\r\n  const [messagesCable, setMessagesCable] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  console.log('ngoai', messages)\r\n  //\r\n  const startListening = () => {\r\n    messagesCable.cable = ActionCable.createConsumer(\r\n      `http://192.168.1.189:3000/cable?token=${props.currentUser.attributes.authToken}&room_id=${props.currentRoom}`\r\n    );\r\n    messagesCable.channel = messagesCable.cable.subscriptions.create(\r\n      {\r\n        channel: \"MessagesChannel\"\r\n      },\r\n      {\r\n        //chạy khi kết nối thành công vs ruby khi component này didMount \r\n        connected: () => {\r\n          if (messages.length === 0) {\r\n            messagesCable.channel.getInitialMessages(); //lấy tin nhắn mới về\r\n          }\r\n        },\r\n        //chạy khi ruby có gì muốn nói với FE\r\n        received: data => {\r\n          if (data.type === \"receive\" || data.type === \"receive_latest\") {\r\n            const mapIdDataToInt = _.map(data.messages.data, n => ({\r\n              id: parseInt(n.id),\r\n              attributes: n.attributes,\r\n              relationships: {\r\n                room: n.relationships.room,\r\n                user: {\r\n                  data: {\r\n                    id: parseInt(n.relationships.user.data.id),\r\n                    type: n.relationships.user.data.type,\r\n                    name: _.find(data.messages.included, { 'id': `${n.relationships.user.data.id}` }).attributes.name\r\n                  }\r\n                }\r\n              },\r\n              type: n.type\r\n            }))\r\n            const dataMessages = [...messages, ...mapIdDataToInt]\r\n            setMessages(dataMessages)\r\n          }\r\n        },\r\n        //lấy tin nhắn cũ về\r\n        getInitialMessages: () => {\r\n          return messagesCable.channel.perform(\"receive_latest\", {\r\n            total_messages: 20\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n  //\r\n  const changeRoom = () => {\r\n    //TypeError: Cannot read property 'unsubscribe' of undefined \r\n    // tức là cái obj chứa unsubscribe bị undefined chứ không phải unsubscribe bị undefined\r\n    if (props.currentRoom !== -1) {\r\n      if (joinRoom === true) {\r\n        messagesCable.channel.unsubscribe();\r\n      }\r\n      isJoinRoom(true);\r\n      setMessages([]);\r\n    }\r\n  }\r\n  //\r\n  if (props.currentRoom !== -1 && messages.length === 0) {\r\n    startListening();\r\n  }\r\n  //\r\n  // action cable\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggle = () => {\r\n    setTooltipOpen(!tooltipOpen);\r\n  }\r\n  //\r\n  const valueMessage = props.valueMessage;\r\n  const wrapperRef = useRef(); //hook\r\n  const mainRoomRef = useRef(); //hook\r\n  const [clickOnInput, setClickOnInput] = useState(false);\r\n  const [showGif, setShowGif] = useState(false);\r\n  const clickOnThisInput = () => {\r\n    setClickOnInput(true);\r\n    document.addEventListener('click', clickOutSide)\r\n  }\r\n  const clickOutSide = (event) => {\r\n    const { target } = event;\r\n    if (!wrapperRef.current.contains(target)) {\r\n      setClickOnInput(false)\r\n      document.removeEventListener('click', clickOutSide)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', sendMessage)\r\n    return function cleanup() {\r\n      document.removeEventListener('keydown', sendMessage)\r\n    };\r\n  })\r\n  //\r\n  useEffect(\r\n    () => {\r\n      changeRoom();\r\n    },\r\n    [props.currentRoom]\r\n  );\r\n  // useEffect(\r\n  //   () => {\r\n  //     if (messages === []) {\r\n\r\n  //     }\r\n  //   },\r\n  //   [messages]\r\n  // );\r\n  //\r\n  const sendMessage = (event) => {\r\n    // valueMessage.trim() loại bỏ khoảng trống để check empty text area\r\n    if (event.keyCode === 13 && !event.shiftKey && valueMessage.trim() !== '' && clickOnInput === true && props.currentRoom !== -1) {\r\n      props.setSendMessage(props.currentRoom, valueMessage);\r\n      props.setValueMessage('');\r\n      // khi send messenger thì chuyển xuống cuối để đọc tin nhắn mới nhất\r\n      mainRoomRef.current.scrollTop = mainRoomRef.current.scrollHeight\r\n    }\r\n    props.setValueMessage('');\r\n  }\r\n  const showInfoRoom = () => {\r\n    props.setShowInfoRoom();\r\n  }\r\n  const changeInputValue = (e) => {\r\n    props.setValueMessage(e.target.value);\r\n  }\r\n  const addEmoji = (item) => {\r\n    props.setValueMessage(`${valueMessage}${item}`)\r\n  }\r\n  const letShowGif = (item) => {\r\n    props.setSendGif(props.currentRoom, item)\r\n    setShowGif(!showGif)\r\n    //nextTich là hàm call back đợi cho mọi thứ render (virtual dom) xong xuôi hết mới chạy \r\n    nextTick(() => {\r\n      // khi send messenger thì chuyển xuống cuối để đọc tin nhắn mới nhất\r\n      mainRoomRef.current.scrollTop = mainRoomRef.current.scrollHeight\r\n    })\r\n  }\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div\r\n      className={classNames('ContentRoom', {\r\n        ContentRoomLightTheme: lightTheme === true,\r\n        MaxWidth: props.showInfoRoom === false,\r\n      })}\r\n    >\r\n      <div className='Header-ContentRoom'>\r\n        <p className='Name-Room'># {\r\n          props.currentRoom !== -1 ?\r\n            _.find(props.dataRoom, { id: props.currentRoom }).nameRoom\r\n            :\r\n            null\r\n        }</p>\r\n        <PieChart />\r\n        <div className='Icon-Header-ContentRoom'>\r\n          <SwitchLanguage />\r\n          <div className='Switch-Day-Night'>\r\n            <DayNight />\r\n          </div>\r\n          <MdPeople\r\n            className={classNames('MdPeople', {\r\n              MdPeopleLightTheme: lightTheme === true,\r\n              LightThisIcon: props.showInfoRoom === true,\r\n              MdPeopleLightThemeLightThisIcon: lightTheme === true && props.showInfoRoom === true\r\n            })}\r\n            onClick={showInfoRoom} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={classNames('main-room', {\r\n          MainRoomLightTheme: lightTheme === true\r\n        })}\r\n        id=\"scrollbar-style\"\r\n        ref={mainRoomRef}\r\n      >\r\n        {\r\n          props.currentRoom !== -1 ?\r\n            _.map(_.find(props.dataRoom, { id: props.currentRoom }).data, (item, index) =>\r\n              <div className='Chat-Message' key={index} >\r\n                <div\r\n                  className={classNames('Custom-Container', {\r\n                    CustomContainerLightTheme: lightTheme === true\r\n                  })}\r\n                >\r\n                  <img src={item.avatar} alt='Img-User' href=\"#\" id=\"TooltipExample\" />\r\n                  <Tooltip className='Tooltip' placement=\"right\" isOpen={tooltipOpen} target=\"TooltipExample\" toggle={toggle}>\r\n                    <div className='Info-User-On-Chat'>\r\n                    </div>\r\n                  </Tooltip>\r\n                  <div\r\n                    className={classNames('Name-Time-Message', {\r\n                      NameTimeMessageLightTheme: lightTheme === true\r\n                    })}\r\n                  >\r\n                    <div className='Name-Time'>\r\n                      <p className='Name'>{item.name}</p>\r\n                      <p className='Time'>{item.time}</p>\r\n                    </div>\r\n                    {\r\n                      item.message !== undefined ?\r\n                        <div className='Show-Message' dangerouslySetInnerHTML={{ __html: toBr(marked(item.message)) }} />\r\n                        :\r\n                        <img src={item.gif} alt='gif' />\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n            :\r\n            null\r\n        }\r\n      </div>\r\n\r\n      <div\r\n        className={classNames('Footer-ContentRoom', {\r\n          FooterContentRoomLightTheme: lightTheme === true\r\n        })}\r\n      >\r\n        <div\r\n          className={classNames('Message', {\r\n            ClickMessage: clickOnInput === true,\r\n            MessageLightTheme: lightTheme === true,\r\n            ClickMessageMessageLightTheme: clickOnInput === true && lightTheme === true\r\n          })}\r\n        >\r\n          <FaFolderPlus\r\n            className={classNames('Footer-Icon', {\r\n              ClickIcon: clickOnInput === true,\r\n              FooterIconLightTheme: lightTheme === true,\r\n              ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n            })}\r\n          />\r\n          <textarea className='Footer-Input'\r\n            type=\"textarea\"\r\n            ref={wrapperRef}\r\n            onClick={clickOnThisInput}\r\n            onChange={changeInputValue}\r\n            value={valueMessage}\r\n          />\r\n          <div className='Footer-Icon-Right'>\r\n            <MdGif\r\n              className={classNames('Footer-Icon Gif-Icon', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n              onClick={() => setShowGif(!showGif)}\r\n            />\r\n            <div\r\n              className={classNames('Footer-Icon Icon-Popover', {\r\n                ClickIcon: clickOnInput === true,\r\n                FooterIconLightTheme: lightTheme === true,\r\n                ClickIconFooterIconLightTheme: clickOnInput === true && lightTheme === true\r\n              })}\r\n            >\r\n              <IconPopover addEmoji={addEmoji} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classNames('test', {\r\n          testLightTheme: lightTheme === true,\r\n          ShowGif: showGif === true\r\n        })}\r\n          id=\"test-scrollbar-style\">\r\n          <Masonry\r\n            breakpointCols={5}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid_column\"\r\n          >\r\n            {_.map(props.arrGif, (item, index) => (\r\n              <div className='div-gif' key={index}>\r\n                <img className='img-gif'\r\n                  src={item}\r\n                  alt='gif'\r\n                  onClick={() => letShowGif(item)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </Masonry>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    arrGif: state.arrGif,\r\n    valueMessage: state.valueMessage,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage,\r\n    currentUser: state.currentUser\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setShowInfoRoom: () => { dispatch(actions.setShowInfoRoom()) },\r\n    setSendMessage: (nameRoom, message) => { dispatch(actions.setSendMessage({ nameRoom: nameRoom, message: message })) },\r\n    setValueMessage: (data) => { dispatch(actions.setValueMessage(data)) },\r\n    setSendGif: (nameRoom, gif) => { dispatch(actions.setSendGif({ nameRoom: nameRoom, gif: gif })) }\r\n  }\r\n}\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ContentRoom);","import React, { useState } from 'react';\r\nimport { Collapse, CardBody, Card } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport './IntroRoom.css'\r\nimport _ from 'lodash'\r\nimport classNames from 'classnames'\r\n\r\nconst IntroRoom = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const lightTheme = props.changeTheme;\r\n  return (\r\n    <div >\r\n      <div className='IntroRoom' onClick={toggle}>\r\n        {\r\n          props.changeVietNamLanguage ?\r\n            <p>Info Room</p>\r\n            :\r\n            <p>{props.dataVietNamLanguage.InfoRoom}</p>\r\n        }\r\n      </div>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card>\r\n          <CardBody\r\n            className={classNames('Body-IntroRoom', {\r\n              BodyIntroRoomLightTheme: lightTheme === false\r\n            })}\r\n          >\r\n            {\r\n              props.currentRoom !== -1 ?\r\n                _.find(props.dataRoom, { id: props.currentRoom }).Intro\r\n                :\r\n                null\r\n            }\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(IntroRoom);","import React, { useState, useRef } from 'react';\r\nimport './InfoRoom.css';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'\r\nimport classNames from 'classnames'\r\nimport IntroRoom from './Collapse/IntroRoom'\r\n\r\nfunction InfoRoom(props) {\r\n  const ahihiRef = useRef();\r\n  const testRef = useRef();\r\n  const [indexDiv, setIndexDiv] = useState(-1);\r\n  const [divStyle, setdivStyle] = useState({});\r\n  var ListRoomArr;\r\n  if (props.currentRoom === -1) {\r\n    ListRoomArr = []\r\n  }\r\n  if (props.currentRoom !== -1) {\r\n    ListRoomArr = _.uniqBy(_.map(_.find(props.dataRoom, { id: props.currentRoom }).data, (item) => ({\r\n      avatar: item.avatar,\r\n      name: item.name,\r\n      level: item.level\r\n    })), 'name');\r\n  }\r\n  const lightTheme = props.changeTheme;\r\n  const showInfoDiv = (e, index) => {\r\n    setIndexDiv(index)\r\n    document.addEventListener('click', clickOutSide)\r\n    if (window.innerHeight - e.target.offsetTop - ahihiRef.current.scrollTop < 0) {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop - 250,\r\n      })\r\n    }\r\n    if (e.target.offsetTop - ahihiRef.current.scrollTop > 250) {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop - 200,\r\n      })\r\n    }\r\n    else {\r\n      return setdivStyle({\r\n        position: 'absolute',\r\n        top: e.target.offsetTop - ahihiRef.current.scrollTop,\r\n      })\r\n    }\r\n  }\r\n  const clickOutSide = (event) => {\r\n    const { target } = event;\r\n    if (!ahihiRef.current.contains(target)) {\r\n      setIndexDiv(-1)\r\n      document.removeEventListener('click', clickOutSide)\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className={classNames('InfoRoom', {\r\n        HideThisDiv: props.showInfoRoom === false,\r\n        InfoRoomLightTheme: lightTheme === true,\r\n      })}\r\n    >\r\n      <div className='Header-InfoRoom' >\r\n        <IntroRoom />\r\n      </div>\r\n      <div ref={ahihiRef}\r\n        className={classNames('Body-InfoRoom', {\r\n          BodyInfoRoomLightTheme: lightTheme === true,\r\n        })}\r\n        id=\"scrollbar\">\r\n\r\n        <div className='Admin' >\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Admin</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Admin}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n\r\n          {\r\n            ListRoomArr.length !== 0 ?\r\n\r\n              <div className='User-InfoRoom'>\r\n                <div className='Avatar-InfoRoom' ref={testRef}>\r\n                  <img src={_.filter(ListRoomArr, { level: 'Admin' })[0].avatar} alt='Img-User'\r\n                    onClick={(e) => showInfoDiv(e, 99999)}\r\n                  />\r\n                </div>\r\n                <div className='Name-User-InfoRoom'>\r\n                  <p>{_.filter(ListRoomArr, { level: 'Admin' })[0].name}</p>\r\n                </div>\r\n                <div\r\n                  className={classNames('AhihiTest', {\r\n                    addZindexCss: 99999 === indexDiv,\r\n                  })}\r\n                  style={divStyle}>\r\n                  <div className='Top'>\r\n                    <img src={_.filter(ListRoomArr, { level: 'Admin' })[0].avatar} alt='Img-User' />\r\n                    <div className='name-show-info'>\r\n                      <p>{_.filter(ListRoomArr, { level: 'Admin' })[0].name}</p>\r\n                      <p\r\n                        className={classNames('levelAdmin', {\r\n                          levelAdminLightTheme: lightTheme === true,\r\n                        })}\r\n                      >Admin</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              :\r\n              null\r\n          }\r\n\r\n        </div>\r\n        <div className='Admin' >\r\n          <div className='Title-InfoRoom'>\r\n            <p className='Title-InfoRoom-Admin'>\r\n              {\r\n                props.changeVietNamLanguage ?\r\n                  <p>Member</p>\r\n                  :\r\n                  <p>{props.dataVietNamLanguage.Member}</p>\r\n              }\r\n            </p>\r\n          </div>\r\n\r\n          {\r\n            ListRoomArr.length !== 0 ?\r\n\r\n              <div className='Member' >\r\n                {_.map(_.filter(ListRoomArr, { level: 'Member' }), (item, index) =>\r\n                  <div className='User-InfoRoom' key={index} >\r\n                    <div className='Avatar-InfoRoom'>\r\n                      <img src={item.avatar} alt='Img-User' onClick={(e) => showInfoDiv(e, index)} />\r\n                    </div>\r\n                    <div className='Name-User-InfoRoom'>\r\n                      <p>{item.name}</p>\r\n                    </div>\r\n                    {/* Member-Info */}\r\n                    <div\r\n                      className={classNames('AhihiTest', {\r\n                        addZindexCss: index === indexDiv,\r\n                      })}\r\n                      style={divStyle}>\r\n                      <div className='Top'>\r\n                        <img src={item.avatar} alt='Img-User' />\r\n                        <div className='name-show-info'>\r\n                          <p>{item.name}</p>\r\n                          <p\r\n                            className={classNames('levelMember', {\r\n                              levelMemberLightTheme: lightTheme === true,\r\n                            })}\r\n                          >Member</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* Member-Info */}\r\n                  </div>)\r\n                }\r\n              </div>\r\n              :\r\n              null\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    dataRoom: state.dataRoom,\r\n    currentRoom: state.currentRoom,\r\n    showInfoRoom: state.showInfoRoom,\r\n    changeTheme: state.changeTheme,\r\n    dataVietNamLanguage: state.dataVietNamLanguage,\r\n    changeVietNamLanguage: state.changeVietNamLanguage\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(InfoRoom);","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport ListRoom from './components/ListRoom'\r\nimport ContentRoom from './components/ContentRoom'\r\nimport InfoRoom from './components/InfoRoom'\r\nimport * as actions from './actions/index';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames'\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    props.getApi(props.currentUser);\r\n  }, [])\r\n  return (\r\n    <div\r\n      className={classNames('App', {\r\n        BackGroundIMG: props.currentRoom === -1\r\n      })}\r\n    >\r\n      <ListRoom />\r\n      <ContentRoom />\r\n      <InfoRoom />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n    currentRoom: state.currentRoom\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getApi: (data) => { dispatch(actions.getApi(data)) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(App);","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router, Switch, Route\r\n} from \"react-router-dom\";\r\nimport Login from './components/Login/Login'\r\nimport App from './App'\r\n\r\nfunction Boss(props) {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/App\">\r\n            <App />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\nexport default Boss;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport myReducer from './reduces/index';\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport Boss from './Boss';\r\n\r\nconst store = createStore(\r\n  myReducer,\r\n  applyMiddleware(thunk),\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Boss />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}